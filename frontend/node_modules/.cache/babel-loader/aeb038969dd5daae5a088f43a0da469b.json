{"ast":null,"code":"'use strict';\n\nconst PassThrough = require('stream').PassThrough;\n\nconst zlib = require('zlib');\n\nconst mimicResponse = require('mimic-response');\n\nmodule.exports = response => {\n  // TODO: Use Array#includes when targeting Node.js 6\n  if (['gzip', 'deflate'].indexOf(response.headers['content-encoding']) === -1) {\n    return response;\n  }\n\n  const unzip = zlib.createUnzip();\n  const stream = new PassThrough();\n  mimicResponse(response, stream);\n  unzip.on('error', err => {\n    if (err.code === 'Z_BUF_ERROR') {\n      stream.end();\n      return;\n    }\n\n    stream.emit('error', err);\n  });\n  response.pipe(unzip).pipe(stream);\n  return stream;\n};","map":{"version":3,"sources":["C:/Users/anafe/OneDrive/Documentos/projeto_com_react2/src/backend/node/node_modules/decompress-response/index.js"],"names":["PassThrough","require","zlib","mimicResponse","module","exports","response","indexOf","headers","unzip","createUnzip","stream","on","err","code","end","emit","pipe"],"mappings":"AAAA;;AACA,MAAMA,WAAW,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,WAAtC;;AACA,MAAME,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,gBAAD,CAA7B;;AAEAG,MAAM,CAACC,OAAP,GAAiBC,QAAQ,IAAI;AAC5B;AACA,MAAI,CAAC,MAAD,EAAS,SAAT,EAAoBC,OAApB,CAA4BD,QAAQ,CAACE,OAAT,CAAiB,kBAAjB,CAA5B,MAAsE,CAAC,CAA3E,EAA8E;AAC7E,WAAOF,QAAP;AACA;;AAED,QAAMG,KAAK,GAAGP,IAAI,CAACQ,WAAL,EAAd;AACA,QAAMC,MAAM,GAAG,IAAIX,WAAJ,EAAf;AAEAG,EAAAA,aAAa,CAACG,QAAD,EAAWK,MAAX,CAAb;AAEAF,EAAAA,KAAK,CAACG,EAAN,CAAS,OAAT,EAAkBC,GAAG,IAAI;AACxB,QAAIA,GAAG,CAACC,IAAJ,KAAa,aAAjB,EAAgC;AAC/BH,MAAAA,MAAM,CAACI,GAAP;AACA;AACA;;AAEDJ,IAAAA,MAAM,CAACK,IAAP,CAAY,OAAZ,EAAqBH,GAArB;AACA,GAPD;AASAP,EAAAA,QAAQ,CAACW,IAAT,CAAcR,KAAd,EAAqBQ,IAArB,CAA0BN,MAA1B;AAEA,SAAOA,MAAP;AACA,CAvBD","sourcesContent":["'use strict';\nconst PassThrough = require('stream').PassThrough;\nconst zlib = require('zlib');\nconst mimicResponse = require('mimic-response');\n\nmodule.exports = response => {\n\t// TODO: Use Array#includes when targeting Node.js 6\n\tif (['gzip', 'deflate'].indexOf(response.headers['content-encoding']) === -1) {\n\t\treturn response;\n\t}\n\n\tconst unzip = zlib.createUnzip();\n\tconst stream = new PassThrough();\n\n\tmimicResponse(response, stream);\n\n\tunzip.on('error', err => {\n\t\tif (err.code === 'Z_BUF_ERROR') {\n\t\t\tstream.end();\n\t\t\treturn;\n\t\t}\n\n\t\tstream.emit('error', err);\n\t});\n\n\tresponse.pipe(unzip).pipe(stream);\n\n\treturn stream;\n};\n"]},"metadata":{},"sourceType":"module"}