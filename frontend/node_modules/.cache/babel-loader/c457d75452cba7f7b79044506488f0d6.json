{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import {Except} from './except';\n\n/**\nMerge two types into a new type. Keys of the second type overrides keys of the first type.\n\n@example\n```\nimport {Merge} from 'type-fest';\n\ntype Foo = {\n\ta: number;\n\tb: string;\n};\n\ntype Bar = {\n\tb: number;\n};\n\nconst ab: Merge<Foo, Bar> = {a: 1, b: 2};\n```\n*/\nexport type Merge<FirstType, SecondType> = Except<FirstType, Extract<keyof FirstType, keyof SecondType>> & SecondType;\n"]},"metadata":{},"sourceType":"module"}