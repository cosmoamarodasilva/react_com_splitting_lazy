{"ast":null,"code":"/*\n * Jake JavaScript build tool\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\nconst PROJECT_DIR = process.env.PROJECT_DIR;\n\nlet exec = require('child_process').execSync;\n\nlet fs = require('fs');\n\nlet util = require('util');\n\nlet {\n  rule,\n  rmRf\n} = require(`${PROJECT_DIR}/lib/jake`);\n\ndirectory('tmpsrc');\ndirectory('tmpbin'); ////////////////////////////////////////////////////////////\n// Simple Suffix Rule\n\nfile('tmp', ['tmp_init', 'tmp_dep1.o', 'tmp_dep2.o'], function (params) {\n  console.log('tmp task');\n  let data1 = fs.readFileSync('tmp_dep1.o');\n  let data2 = fs.readFileSync('tmp_dep2.o');\n  fs.writeFileSync('tmp', data1 + data2);\n});\nrule('.o', '.c', function () {\n  let cmd = util.format('cp %s %s', this.source, this.name);\n  console.log(cmd + ' task');\n  exec(cmd);\n});\nfile('tmp_dep1.c', function () {\n  fs.writeFileSync('tmp_dep1.c', 'src_1');\n  console.log('tmp_dep1.c task');\n}); // note that tmp_dep2.o depends on tmp_dep2.c, which is a\n// static file.\n\ntask('tmp_init', function () {\n  fs.writeFileSync('tmp_dep2.c', 'src_2');\n  console.log('tmp_dep2.c task');\n}); ////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////\n// Pattern Rule\n\nfile('tmp_p', ['tmp_init', 'tmp_dep1.oo', 'tmp_dep2.oo'], function (params) {\n  console.log('tmp pattern task');\n  let data1 = fs.readFileSync('tmp_dep1.oo');\n  let data2 = fs.readFileSync('tmp_dep2.oo');\n  fs.writeFileSync('tmp_p', data1 + data2 + ' pattern');\n});\nrule('%.oo', '%.c', function () {\n  let cmd = util.format('cp %s %s', this.source, this.name);\n  console.log(cmd + ' task');\n  exec(cmd);\n}); ////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////\n// Pattern Rule with Folder\n// i.e.  rule('tmpbin/%.oo', 'tmpsrc/%.c', ...\n\nfile('tmp_pf', ['tmp_src_init', 'tmpbin', 'tmpbin/tmp_dep1.oo', 'tmpbin/tmp_dep2.oo'], function (params) {\n  console.log('tmp pattern folder task');\n  let data1 = fs.readFileSync('tmpbin/tmp_dep1.oo');\n  let data2 = fs.readFileSync('tmpbin/tmp_dep2.oo');\n  fs.writeFileSync('tmp_pf', data1 + data2 + ' pattern folder');\n});\nrule('tmpbin/%.oo', 'tmpsrc/%.c', function () {\n  let cmd = util.format('cp %s %s', this.source, this.name);\n  console.log(cmd + ' task');\n  exec(cmd);\n});\nfile('tmpsrc/tmp_dep2.c', ['tmpsrc'], function () {\n  fs.writeFileSync('tmpsrc/tmp_dep2.c', 'src/src_2');\n  console.log('tmpsrc/tmp_dep2.c task');\n}); // Create static files in folder tmpsrc.\n\ntask('tmp_src_init', ['tmpsrc'], function () {\n  fs.writeFileSync('tmpsrc/tmp_dep1.c', 'src/src_1');\n  console.log('tmpsrc/tmp_dep1.c task');\n}); ////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////\n// Namespace Test. This is a Mixed Test.\n// Test for\n// -  rules belonging to different namespace.\n// -  rules with folder and pattern\n\ntask('tmp_ns', ['tmpbin', 'rule:init', 'tmpbin/tmp_dep2.oo' // *** This relies on a rule defined before.\n, 'rule:tmpbin/dep1.oo', 'rule:tmpbin/file2.oo'], function () {\n  console.log('tmp pattern folder namespace task');\n  let data1 = fs.readFileSync('tmpbin/dep1.oo');\n  let data2 = fs.readFileSync('tmpbin/tmp_dep2.oo');\n  let data3 = fs.readFileSync('tmpbin/file2.oo');\n  fs.writeFileSync('tmp_ns', data1 + data2 + data3 + ' pattern folder namespace');\n});\nnamespace('rule', function () {\n  task('init', ['tmpsrc'], function () {\n    fs.writeFileSync('tmpsrc/file2.c', 'src/src_3');\n    console.log('tmpsrc/file2.c init task');\n  });\n  file('tmpsrc/dep1.c', ['tmpsrc'], function () {\n    fs.writeFileSync('tmpsrc/dep1.c', 'src/src_1');\n    console.log('tmpsrc/dep1.c task');\n  }, {\n    async: true\n  });\n  rule('tmpbin/%.oo', 'tmpsrc/%.c', function () {\n    let cmd = util.format('cp %s %s', this.source, this.name);\n    console.log(cmd + ' ns task');\n    exec(cmd);\n  });\n}); ////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////\n// Chain rule\n// rule('tmpbin/%.pdf', 'tmpbin/%.dvi', function() { ...\n// rule('tmpbin/%.dvi', 'tmpsrc/%.tex', ['tmpbin'], function() { ...\n\ntask('tmp_cr', ['chainrule:init', 'chainrule:tmpbin/file1.pdf', 'chainrule:tmpbin/file2.pdf'], function () {\n  console.log('tmp chainrule namespace task');\n  let data1 = fs.readFileSync('tmpbin/file1.pdf');\n  let data2 = fs.readFileSync('tmpbin/file2.pdf');\n  fs.writeFileSync('tmp_cr', data1 + data2 + ' chainrule namespace');\n});\nnamespace('chainrule', function () {\n  task('init', ['tmpsrc', 'tmpbin'], function () {\n    fs.writeFileSync('tmpsrc/file1.tex', 'tex1 ');\n    fs.writeFileSync('tmpsrc/file2.tex', 'tex2 ');\n    console.log('chainrule init task');\n  });\n  rule('tmpbin/%.pdf', 'tmpbin/%.dvi', function () {\n    let cmd = util.format('cp %s %s', this.source, this.name);\n    console.log(cmd + ' dvi->pdf task');\n    exec(cmd);\n  });\n  rule('tmpbin/%.dvi', 'tmpsrc/%.tex', ['tmpbin'], function () {\n    let cmd = util.format('cp %s %s', this.source, this.name);\n    console.log(cmd + ' tex->dvi task');\n    exec(cmd);\n  });\n}); ////////////////////////////////////////////////////////////\n\nnamespace('precedence', function () {\n  task('test', ['foo.html'], function () {\n    console.log('ran test');\n  });\n  rule('.html', '.txt', function () {\n    console.log('created html');\n    let data = fs.readFileSync(this.source);\n    fs.writeFileSync(this.name, data.toString());\n  });\n});\nnamespace('regexPattern', function () {\n  task('test', ['foo.html'], function () {\n    console.log('ran test');\n  });\n  rule(/\\.html$/, '.txt', function () {\n    console.log('created html');\n    let data = fs.readFileSync(this.source);\n    fs.writeFileSync(this.name, data.toString());\n  });\n});\nnamespace('sourceFunction', function () {\n  let srcFunc = function (taskName) {\n    return taskName.replace(/\\.[^.]+$/, '.txt');\n  };\n\n  task('test', ['foo.html'], function () {\n    console.log('ran test');\n  });\n  rule('.html', srcFunc, function () {\n    console.log('created html');\n    let data = fs.readFileSync(this.source);\n    fs.writeFileSync(this.name, data.toString());\n  });\n}); ////////////////////////////////////////////////////////////\n\ntask('clean', function () {\n  rmRf('./foo');\n  rmRf('./tmp');\n});","map":{"version":3,"sources":["C:/Users/anafe/OneDrive/Documentos/projeto_com_react2/src/backend/node/node_modules/jake/test/integration/jakelib/rule.jake.js"],"names":["PROJECT_DIR","process","env","exec","require","execSync","fs","util","rule","rmRf","directory","file","params","console","log","data1","readFileSync","data2","writeFileSync","cmd","format","source","name","task","data3","namespace","async","data","toString","srcFunc","taskName","replace"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYF,WAAhC;;AAEA,IAAIG,IAAI,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,QAApC;;AACA,IAAIC,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAI;AAAEI,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAiBL,OAAO,CAAE,GAAEJ,WAAY,WAAhB,CAA5B;;AAEAU,SAAS,CAAC,QAAD,CAAT;AACAA,SAAS,CAAC,QAAD,CAAT,C,CAEA;AACA;;AACAC,IAAI,CAAC,KAAD,EAAQ,CAAC,UAAD,EAAa,YAAb,EAA2B,YAA3B,CAAR,EAAkD,UAAUC,MAAV,EAAkB;AACtEC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,MAAIC,KAAK,GAAGT,EAAE,CAACU,YAAH,CAAgB,YAAhB,CAAZ;AACA,MAAIC,KAAK,GAAGX,EAAE,CAACU,YAAH,CAAgB,YAAhB,CAAZ;AACAV,EAAAA,EAAE,CAACY,aAAH,CAAiB,KAAjB,EAAwBH,KAAK,GAAGE,KAAhC;AACD,CALG,CAAJ;AAOAT,IAAI,CAAC,IAAD,EAAO,IAAP,EAAa,YAAY;AAC3B,MAAIW,GAAG,GAAGZ,IAAI,CAACa,MAAL,CAAY,UAAZ,EAAwB,KAAKC,MAA7B,EAAqC,KAAKC,IAA1C,CAAV;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,GAAG,OAAlB;AACAhB,EAAAA,IAAI,CAACgB,GAAD,CAAJ;AACD,CAJG,CAAJ;AAMAR,IAAI,CAAC,YAAD,EAAe,YAAY;AAC7BL,EAAAA,EAAE,CAACY,aAAH,CAAiB,YAAjB,EAA+B,OAA/B;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,CAHG,CAAJ,C,CAKA;AACA;;AACAS,IAAI,CAAC,UAAD,EAAa,YAAY;AAC3BjB,EAAAA,EAAE,CAACY,aAAH,CAAiB,YAAjB,EAA+B,OAA/B;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,CAHG,CAAJ,C,CAIA;AAEA;AACA;;AACAH,IAAI,CAAC,OAAD,EAAU,CAAC,UAAD,EAAa,aAAb,EAA4B,aAA5B,CAAV,EAAsD,UAAUC,MAAV,EAAkB;AAC1EC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,MAAIC,KAAK,GAAGT,EAAE,CAACU,YAAH,CAAgB,aAAhB,CAAZ;AACA,MAAIC,KAAK,GAAGX,EAAE,CAACU,YAAH,CAAgB,aAAhB,CAAZ;AACAV,EAAAA,EAAE,CAACY,aAAH,CAAiB,OAAjB,EAA0BH,KAAK,GAAGE,KAAR,GAAgB,UAA1C;AACD,CALG,CAAJ;AAOAT,IAAI,CAAC,MAAD,EAAS,KAAT,EAAgB,YAAY;AAC9B,MAAIW,GAAG,GAAGZ,IAAI,CAACa,MAAL,CAAY,UAAZ,EAAwB,KAAKC,MAA7B,EAAqC,KAAKC,IAA1C,CAAV;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,GAAG,OAAlB;AACAhB,EAAAA,IAAI,CAACgB,GAAD,CAAJ;AACD,CAJG,CAAJ,C,CAKA;AAEA;AACA;AACA;;AACAR,IAAI,CAAC,QAAD,EAAW,CACb,cADa,EAEX,QAFW,EAGX,oBAHW,EAIX,oBAJW,CAAX,EAIwB,UAAUC,MAAV,EAAkB;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,MAAIC,KAAK,GAAGT,EAAE,CAACU,YAAH,CAAgB,oBAAhB,CAAZ;AACA,MAAIC,KAAK,GAAGX,EAAE,CAACU,YAAH,CAAgB,oBAAhB,CAAZ;AACAV,EAAAA,EAAE,CAACY,aAAH,CAAiB,QAAjB,EAA2BH,KAAK,GAAGE,KAAR,GAAgB,iBAA3C;AACD,CATG,CAAJ;AAWAT,IAAI,CAAC,aAAD,EAAgB,YAAhB,EAA8B,YAAY;AAC5C,MAAIW,GAAG,GAAGZ,IAAI,CAACa,MAAL,CAAY,UAAZ,EAAwB,KAAKC,MAA7B,EAAqC,KAAKC,IAA1C,CAAV;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,GAAG,OAAlB;AACAhB,EAAAA,IAAI,CAACgB,GAAD,CAAJ;AACD,CAJG,CAAJ;AAMAR,IAAI,CAAC,mBAAD,EAAqB,CAAC,QAAD,CAArB,EAAiC,YAAY;AAC/CL,EAAAA,EAAE,CAACY,aAAH,CAAiB,mBAAjB,EAAsC,WAAtC;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,CAHG,CAAJ,C,CAKA;;AACAS,IAAI,CAAC,cAAD,EAAiB,CAAC,QAAD,CAAjB,EAA6B,YAAY;AAC3CjB,EAAAA,EAAE,CAACY,aAAH,CAAiB,mBAAjB,EAAsC,WAAtC;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,CAHG,CAAJ,C,CAIA;AAGA;AACA;AACA;AACA;AACA;;AACAS,IAAI,CAAC,QAAD,EAAW,CACb,QADa,EAEX,WAFW,EAGX,oBAHW,CAGa;AAHb,EAIX,qBAJW,EAKX,sBALW,CAAX,EAK0B,YAAY;AACxCV,EAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACA,MAAIC,KAAK,GAAGT,EAAE,CAACU,YAAH,CAAgB,gBAAhB,CAAZ;AACA,MAAIC,KAAK,GAAGX,EAAE,CAACU,YAAH,CAAgB,oBAAhB,CAAZ;AACA,MAAIQ,KAAK,GAAGlB,EAAE,CAACU,YAAH,CAAgB,iBAAhB,CAAZ;AACAV,EAAAA,EAAE,CAACY,aAAH,CAAiB,QAAjB,EAA2BH,KAAK,GAAGE,KAAR,GAAgBO,KAAhB,GAAwB,2BAAnD;AACD,CAXG,CAAJ;AAaAC,SAAS,CAAC,MAAD,EAAS,YAAY;AAC5BF,EAAAA,IAAI,CAAC,MAAD,EAAS,CAAC,QAAD,CAAT,EAAqB,YAAY;AACnCjB,IAAAA,EAAE,CAACY,aAAH,CAAiB,gBAAjB,EAAmC,WAAnC;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,GAHG,CAAJ;AAKAH,EAAAA,IAAI,CAAC,eAAD,EAAiB,CAAC,QAAD,CAAjB,EAA6B,YAAY;AAC3CL,IAAAA,EAAE,CAACY,aAAH,CAAiB,eAAjB,EAAkC,WAAlC;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,GAHG,EAGD;AAACY,IAAAA,KAAK,EAAE;AAAR,GAHC,CAAJ;AAKAlB,EAAAA,IAAI,CAAC,aAAD,EAAgB,YAAhB,EAA8B,YAAY;AAC5C,QAAIW,GAAG,GAAGZ,IAAI,CAACa,MAAL,CAAY,UAAZ,EAAwB,KAAKC,MAA7B,EAAqC,KAAKC,IAA1C,CAAV;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,GAAG,UAAlB;AACAhB,IAAAA,IAAI,CAACgB,GAAD,CAAJ;AACD,GAJG,CAAJ;AAKD,CAhBQ,CAAT,C,CAiBA;AAEA;AACA;AACA;AACA;;AACAI,IAAI,CAAC,QAAD,EAAW,CACb,gBADa,EAEX,4BAFW,EAGX,4BAHW,CAAX,EAGgC,YAAY;AAC9CV,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,MAAIC,KAAK,GAAGT,EAAE,CAACU,YAAH,CAAgB,kBAAhB,CAAZ;AACA,MAAIC,KAAK,GAAGX,EAAE,CAACU,YAAH,CAAgB,kBAAhB,CAAZ;AACAV,EAAAA,EAAE,CAACY,aAAH,CAAiB,QAAjB,EAA2BH,KAAK,GAAGE,KAAR,GAAgB,sBAA3C;AACD,CARG,CAAJ;AAUAQ,SAAS,CAAC,WAAD,EAAc,YAAY;AACjCF,EAAAA,IAAI,CAAC,MAAD,EAAS,CAAC,QAAD,EAAW,QAAX,CAAT,EAA+B,YAAY;AAC7CjB,IAAAA,EAAE,CAACY,aAAH,CAAiB,kBAAjB,EAAqC,OAArC;AACAZ,IAAAA,EAAE,CAACY,aAAH,CAAiB,kBAAjB,EAAqC,OAArC;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,GAJG,CAAJ;AAMAN,EAAAA,IAAI,CAAC,cAAD,EAAiB,cAAjB,EAAiC,YAAY;AAC/C,QAAIW,GAAG,GAAGZ,IAAI,CAACa,MAAL,CAAY,UAAZ,EAAwB,KAAKC,MAA7B,EAAqC,KAAKC,IAA1C,CAAV;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,GAAG,gBAAlB;AACAhB,IAAAA,IAAI,CAACgB,GAAD,CAAJ;AACD,GAJG,CAAJ;AAMAX,EAAAA,IAAI,CAAC,cAAD,EAAiB,cAAjB,EAAiC,CAAC,QAAD,CAAjC,EAA6C,YAAY;AAC3D,QAAIW,GAAG,GAAGZ,IAAI,CAACa,MAAL,CAAY,UAAZ,EAAwB,KAAKC,MAA7B,EAAqC,KAAKC,IAA1C,CAAV;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,GAAG,gBAAlB;AACAhB,IAAAA,IAAI,CAACgB,GAAD,CAAJ;AACD,GAJG,CAAJ;AAKD,CAlBQ,CAAT,C,CAmBA;;AACAM,SAAS,CAAC,YAAD,EAAe,YAAY;AAClCF,EAAAA,IAAI,CAAC,MAAD,EAAS,CAAC,UAAD,CAAT,EAAuB,YAAY;AACrCV,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAFG,CAAJ;AAIAN,EAAAA,IAAI,CAAC,OAAD,EAAU,MAAV,EAAkB,YAAY;AAChCK,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,QAAIa,IAAI,GAAGrB,EAAE,CAACU,YAAH,CAAgB,KAAKK,MAArB,CAAX;AACAf,IAAAA,EAAE,CAACY,aAAH,CAAiB,KAAKI,IAAtB,EAA4BK,IAAI,CAACC,QAAL,EAA5B;AACD,GAJG,CAAJ;AAKD,CAVQ,CAAT;AAYAH,SAAS,CAAC,cAAD,EAAiB,YAAY;AACpCF,EAAAA,IAAI,CAAC,MAAD,EAAS,CAAC,UAAD,CAAT,EAAuB,YAAY;AACrCV,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAFG,CAAJ;AAIAN,EAAAA,IAAI,CAAC,SAAD,EAAY,MAAZ,EAAoB,YAAY;AAClCK,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,QAAIa,IAAI,GAAGrB,EAAE,CAACU,YAAH,CAAgB,KAAKK,MAArB,CAAX;AACAf,IAAAA,EAAE,CAACY,aAAH,CAAiB,KAAKI,IAAtB,EAA4BK,IAAI,CAACC,QAAL,EAA5B;AACD,GAJG,CAAJ;AAKD,CAVQ,CAAT;AAYAH,SAAS,CAAC,gBAAD,EAAmB,YAAY;AAEtC,MAAII,OAAO,GAAG,UAAUC,QAAV,EAAoB;AAChC,WAAOA,QAAQ,CAACC,OAAT,CAAiB,UAAjB,EAA6B,MAA7B,CAAP;AACD,GAFD;;AAIAR,EAAAA,IAAI,CAAC,MAAD,EAAS,CAAC,UAAD,CAAT,EAAuB,YAAY;AACrCV,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAFG,CAAJ;AAIAN,EAAAA,IAAI,CAAC,OAAD,EAAUqB,OAAV,EAAmB,YAAY;AACjChB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,QAAIa,IAAI,GAAGrB,EAAE,CAACU,YAAH,CAAgB,KAAKK,MAArB,CAAX;AACAf,IAAAA,EAAE,CAACY,aAAH,CAAiB,KAAKI,IAAtB,EAA4BK,IAAI,CAACC,QAAL,EAA5B;AACD,GAJG,CAAJ;AAKD,CAfQ,CAAT,C,CAiBA;;AACAL,IAAI,CAAC,OAAD,EAAU,YAAY;AACxBd,EAAAA,IAAI,CAAC,OAAD,CAAJ;AACAA,EAAAA,IAAI,CAAC,OAAD,CAAJ;AACD,CAHG,CAAJ","sourcesContent":["/*\n * Jake JavaScript build tool\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\n\nconst PROJECT_DIR = process.env.PROJECT_DIR;\n\nlet exec = require('child_process').execSync;\nlet fs = require('fs');\nlet util = require('util');\nlet { rule, rmRf } = require(`${PROJECT_DIR}/lib/jake`);\n\ndirectory('tmpsrc');\ndirectory('tmpbin');\n\n////////////////////////////////////////////////////////////\n// Simple Suffix Rule\nfile('tmp', ['tmp_init', 'tmp_dep1.o', 'tmp_dep2.o'], function (params) {\n  console.log('tmp task');\n  let data1 = fs.readFileSync('tmp_dep1.o');\n  let data2 = fs.readFileSync('tmp_dep2.o');\n  fs.writeFileSync('tmp', data1 + data2);\n});\n\nrule('.o', '.c', function () {\n  let cmd = util.format('cp %s %s', this.source, this.name);\n  console.log(cmd + ' task');\n  exec(cmd);\n});\n\nfile('tmp_dep1.c', function () {\n  fs.writeFileSync('tmp_dep1.c', 'src_1');\n  console.log('tmp_dep1.c task');\n});\n\n// note that tmp_dep2.o depends on tmp_dep2.c, which is a\n// static file.\ntask('tmp_init', function () {\n  fs.writeFileSync('tmp_dep2.c', 'src_2');\n  console.log('tmp_dep2.c task');\n});\n////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////\n// Pattern Rule\nfile('tmp_p', ['tmp_init', 'tmp_dep1.oo', 'tmp_dep2.oo'], function (params) {\n  console.log('tmp pattern task');\n  let data1 = fs.readFileSync('tmp_dep1.oo');\n  let data2 = fs.readFileSync('tmp_dep2.oo');\n  fs.writeFileSync('tmp_p', data1 + data2 + ' pattern');\n});\n\nrule('%.oo', '%.c', function () {\n  let cmd = util.format('cp %s %s', this.source, this.name);\n  console.log(cmd + ' task');\n  exec(cmd);\n});\n////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////\n// Pattern Rule with Folder\n// i.e.  rule('tmpbin/%.oo', 'tmpsrc/%.c', ...\nfile('tmp_pf', [\n  'tmp_src_init'\n  , 'tmpbin'\n  , 'tmpbin/tmp_dep1.oo'\n  , 'tmpbin/tmp_dep2.oo' ], function (params) {\n  console.log('tmp pattern folder task');\n  let data1 = fs.readFileSync('tmpbin/tmp_dep1.oo');\n  let data2 = fs.readFileSync('tmpbin/tmp_dep2.oo');\n  fs.writeFileSync('tmp_pf', data1 + data2 + ' pattern folder');\n});\n\nrule('tmpbin/%.oo', 'tmpsrc/%.c', function () {\n  let cmd = util.format('cp %s %s', this.source, this.name);\n  console.log(cmd + ' task');\n  exec(cmd);\n});\n\nfile('tmpsrc/tmp_dep2.c',['tmpsrc'], function () {\n  fs.writeFileSync('tmpsrc/tmp_dep2.c', 'src/src_2');\n  console.log('tmpsrc/tmp_dep2.c task');\n});\n\n// Create static files in folder tmpsrc.\ntask('tmp_src_init', ['tmpsrc'], function () {\n  fs.writeFileSync('tmpsrc/tmp_dep1.c', 'src/src_1');\n  console.log('tmpsrc/tmp_dep1.c task');\n});\n////////////////////////////////////////////////////////////\n\n\n////////////////////////////////////////////////////////////\n// Namespace Test. This is a Mixed Test.\n// Test for\n// -  rules belonging to different namespace.\n// -  rules with folder and pattern\ntask('tmp_ns', [\n  'tmpbin'\n  , 'rule:init'\n  , 'tmpbin/tmp_dep2.oo'    // *** This relies on a rule defined before.\n  , 'rule:tmpbin/dep1.oo'\n  , 'rule:tmpbin/file2.oo' ], function () {\n  console.log('tmp pattern folder namespace task');\n  let data1 = fs.readFileSync('tmpbin/dep1.oo');\n  let data2 = fs.readFileSync('tmpbin/tmp_dep2.oo');\n  let data3 = fs.readFileSync('tmpbin/file2.oo');\n  fs.writeFileSync('tmp_ns', data1 + data2 + data3 + ' pattern folder namespace');\n});\n\nnamespace('rule', function () {\n  task('init', ['tmpsrc'], function () {\n    fs.writeFileSync('tmpsrc/file2.c', 'src/src_3');\n    console.log('tmpsrc/file2.c init task');\n  });\n\n  file('tmpsrc/dep1.c',['tmpsrc'], function () {\n    fs.writeFileSync('tmpsrc/dep1.c', 'src/src_1');\n    console.log('tmpsrc/dep1.c task');\n  }, {async: true});\n\n  rule('tmpbin/%.oo', 'tmpsrc/%.c', function () {\n    let cmd = util.format('cp %s %s', this.source, this.name);\n    console.log(cmd + ' ns task');\n    exec(cmd);\n  });\n});\n////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////\n// Chain rule\n// rule('tmpbin/%.pdf', 'tmpbin/%.dvi', function() { ...\n// rule('tmpbin/%.dvi', 'tmpsrc/%.tex', ['tmpbin'], function() { ...\ntask('tmp_cr', [\n  'chainrule:init'\n  , 'chainrule:tmpbin/file1.pdf'\n  , 'chainrule:tmpbin/file2.pdf' ], function () {\n  console.log('tmp chainrule namespace task');\n  let data1 = fs.readFileSync('tmpbin/file1.pdf');\n  let data2 = fs.readFileSync('tmpbin/file2.pdf');\n  fs.writeFileSync('tmp_cr', data1 + data2 + ' chainrule namespace');\n});\n\nnamespace('chainrule', function () {\n  task('init', ['tmpsrc', 'tmpbin'], function () {\n    fs.writeFileSync('tmpsrc/file1.tex', 'tex1 ');\n    fs.writeFileSync('tmpsrc/file2.tex', 'tex2 ');\n    console.log('chainrule init task');\n  });\n\n  rule('tmpbin/%.pdf', 'tmpbin/%.dvi', function () {\n    let cmd = util.format('cp %s %s', this.source, this.name);\n    console.log(cmd + ' dvi->pdf task');\n    exec(cmd);\n  });\n\n  rule('tmpbin/%.dvi', 'tmpsrc/%.tex', ['tmpbin'], function () {\n    let cmd = util.format('cp %s %s', this.source, this.name);\n    console.log(cmd + ' tex->dvi task');\n    exec(cmd);\n  });\n});\n////////////////////////////////////////////////////////////\nnamespace('precedence', function () {\n  task('test', ['foo.html'], function () {\n    console.log('ran test');\n  });\n\n  rule('.html', '.txt', function () {\n    console.log('created html');\n    let data = fs.readFileSync(this.source);\n    fs.writeFileSync(this.name, data.toString());\n  });\n});\n\nnamespace('regexPattern', function () {\n  task('test', ['foo.html'], function () {\n    console.log('ran test');\n  });\n\n  rule(/\\.html$/, '.txt', function () {\n    console.log('created html');\n    let data = fs.readFileSync(this.source);\n    fs.writeFileSync(this.name, data.toString());\n  });\n});\n\nnamespace('sourceFunction', function () {\n\n  let srcFunc = function (taskName) {\n    return taskName.replace(/\\.[^.]+$/, '.txt');\n  };\n\n  task('test', ['foo.html'], function () {\n    console.log('ran test');\n  });\n\n  rule('.html', srcFunc, function () {\n    console.log('created html');\n    let data = fs.readFileSync(this.source);\n    fs.writeFileSync(this.name, data.toString());\n  });\n});\n\n////////////////////////////////////////////////////////////\ntask('clean', function () {\n  rmRf('./foo');\n  rmRf('./tmp');\n});\n"]},"metadata":{},"sourceType":"module"}