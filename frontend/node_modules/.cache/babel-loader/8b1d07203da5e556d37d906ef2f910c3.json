{"ast":null,"code":"var tape = require('tape');\n\nvar genfun = require('./');\n\ntape('generate add function', function (t) {\n  var fn = genfun()('function add(n) {')('return n + %d', 42)('}');\n  t.same(fn.toString(), 'function add(n) {\\n  return n + 42\\n}', 'code is indented');\n  t.same(fn.toFunction()(10), 52, 'function works');\n  t.end();\n});\ntape('generate function + closed variables', function (t) {\n  var fn = genfun()('function add(n) {')('return n + %d + number', 42)('}');\n  var notGood = fn.toFunction();\n  var good = fn.toFunction({\n    number: 10\n  });\n\n  try {\n    notGood(10);\n    t.ok(false, 'function should not work');\n  } catch (err) {\n    t.same(err.message, 'number is not defined', 'throws reference error');\n  }\n\n  t.same(good(11), 63, 'function with closed var works');\n  t.end();\n});\ntape('generate property', function (t) {\n  var gen = genfun();\n  t.same(gen.property('a'), 'a');\n  t.same(gen.property('42'), '\"42\"');\n  t.same(gen.property('b', 'a'), 'b.a');\n  t.same(gen.property('b', '42'), 'b[\"42\"]');\n  t.same(gen.sym(42), 'tmp');\n  t.same(gen.sym('a'), 'a');\n  t.same(gen.sym('a'), 'a1');\n  t.same(gen.sym(42), 'tmp1');\n  t.same(gen.sym('const'), 'tmp2');\n  t.end();\n});","map":{"version":3,"sources":["C:/Users/anafe/OneDrive/Documentos/projeto_com_react2/src/backend/node/node_modules/generate-function/test.js"],"names":["tape","require","genfun","t","fn","same","toString","toFunction","end","notGood","good","number","ok","err","message","gen","property","sym"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,IAAD,CAApB;;AAEAD,IAAI,CAAC,uBAAD,EAA0B,UAASG,CAAT,EAAY;AACxC,MAAIC,EAAE,GAAGF,MAAM,GACZ,mBADY,CAAN,CAEJ,eAFI,EAEa,EAFb,EAGN,GAHM,CAAT;AAKAC,EAAAA,CAAC,CAACE,IAAF,CAAOD,EAAE,CAACE,QAAH,EAAP,EAAsB,uCAAtB,EAA+D,kBAA/D;AACAH,EAAAA,CAAC,CAACE,IAAF,CAAOD,EAAE,CAACG,UAAH,GAAgB,EAAhB,CAAP,EAA4B,EAA5B,EAAgC,gBAAhC;AACAJ,EAAAA,CAAC,CAACK,GAAF;AACD,CATG,CAAJ;AAWAR,IAAI,CAAC,sCAAD,EAAyC,UAASG,CAAT,EAAY;AACvD,MAAIC,EAAE,GAAGF,MAAM,GACZ,mBADY,CAAN,CAEJ,wBAFI,EAEsB,EAFtB,EAGN,GAHM,CAAT;AAKA,MAAIO,OAAO,GAAGL,EAAE,CAACG,UAAH,EAAd;AACA,MAAIG,IAAI,GAAGN,EAAE,CAACG,UAAH,CAAc;AAACI,IAAAA,MAAM,EAAC;AAAR,GAAd,CAAX;;AAEA,MAAI;AACFF,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAN,IAAAA,CAAC,CAACS,EAAF,CAAK,KAAL,EAAY,0BAAZ;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZV,IAAAA,CAAC,CAACE,IAAF,CAAOQ,GAAG,CAACC,OAAX,EAAoB,uBAApB,EAA6C,wBAA7C;AACD;;AAEDX,EAAAA,CAAC,CAACE,IAAF,CAAOK,IAAI,CAAC,EAAD,CAAX,EAAiB,EAAjB,EAAqB,gCAArB;AACAP,EAAAA,CAAC,CAACK,GAAF;AACD,CAlBG,CAAJ;AAoBAR,IAAI,CAAC,mBAAD,EAAsB,UAASG,CAAT,EAAY;AACpC,MAAIY,GAAG,GAAGb,MAAM,EAAhB;AAEAC,EAAAA,CAAC,CAACE,IAAF,CAAOU,GAAG,CAACC,QAAJ,CAAa,GAAb,CAAP,EAA0B,GAA1B;AACAb,EAAAA,CAAC,CAACE,IAAF,CAAOU,GAAG,CAACC,QAAJ,CAAa,IAAb,CAAP,EAA2B,MAA3B;AACAb,EAAAA,CAAC,CAACE,IAAF,CAAOU,GAAG,CAACC,QAAJ,CAAa,GAAb,EAAkB,GAAlB,CAAP,EAA+B,KAA/B;AACAb,EAAAA,CAAC,CAACE,IAAF,CAAOU,GAAG,CAACC,QAAJ,CAAa,GAAb,EAAkB,IAAlB,CAAP,EAAgC,SAAhC;AACAb,EAAAA,CAAC,CAACE,IAAF,CAAOU,GAAG,CAACE,GAAJ,CAAQ,EAAR,CAAP,EAAoB,KAApB;AACAd,EAAAA,CAAC,CAACE,IAAF,CAAOU,GAAG,CAACE,GAAJ,CAAQ,GAAR,CAAP,EAAqB,GAArB;AACAd,EAAAA,CAAC,CAACE,IAAF,CAAOU,GAAG,CAACE,GAAJ,CAAQ,GAAR,CAAP,EAAqB,IAArB;AACAd,EAAAA,CAAC,CAACE,IAAF,CAAOU,GAAG,CAACE,GAAJ,CAAQ,EAAR,CAAP,EAAoB,MAApB;AACAd,EAAAA,CAAC,CAACE,IAAF,CAAOU,GAAG,CAACE,GAAJ,CAAQ,OAAR,CAAP,EAAyB,MAAzB;AAEAd,EAAAA,CAAC,CAACK,GAAF;AACD,CAdG,CAAJ","sourcesContent":["var tape = require('tape')\nvar genfun = require('./')\n\ntape('generate add function', function(t) {\n  var fn = genfun()\n    ('function add(n) {')\n      ('return n + %d', 42)\n    ('}')\n\n  t.same(fn.toString(), 'function add(n) {\\n  return n + 42\\n}', 'code is indented')\n  t.same(fn.toFunction()(10), 52, 'function works')\n  t.end()\n})\n\ntape('generate function + closed variables', function(t) {\n  var fn = genfun()\n    ('function add(n) {')\n      ('return n + %d + number', 42)\n    ('}')\n\n  var notGood = fn.toFunction()\n  var good = fn.toFunction({number:10})\n\n  try {\n    notGood(10)\n    t.ok(false, 'function should not work')\n  } catch (err) {\n    t.same(err.message, 'number is not defined', 'throws reference error')\n  }\n\n  t.same(good(11), 63, 'function with closed var works')\n  t.end()\n})\n\ntape('generate property', function(t) {\n  var gen = genfun()\n\n  t.same(gen.property('a'), 'a')\n  t.same(gen.property('42'), '\"42\"')\n  t.same(gen.property('b', 'a'), 'b.a')\n  t.same(gen.property('b', '42'), 'b[\"42\"]')\n  t.same(gen.sym(42), 'tmp')\n  t.same(gen.sym('a'), 'a')\n  t.same(gen.sym('a'), 'a1')\n  t.same(gen.sym(42), 'tmp1')\n  t.same(gen.sym('const'), 'tmp2')\n\n  t.end()\n})\n"]},"metadata":{},"sourceType":"module"}