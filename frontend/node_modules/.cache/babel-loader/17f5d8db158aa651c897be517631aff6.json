{"ast":null,"code":"'use strict';\n\nvar fs = require('fs');\n\nvar ini = require('ini');\n\nvar path = require('path');\n\nvar stripJsonComments = require('strip-json-comments');\n\nvar parse = exports.parse = function (content) {\n  //if it ends in .json or starts with { then it must be json.\n  //must be done this way, because ini accepts everything.\n  //can't just try and parse it and let it throw if it's not ini.\n  //everything is ini. even json with a syntax error.\n  if (/^\\s*{/.test(content)) return JSON.parse(stripJsonComments(content));\n  return ini.parse(content);\n};\n\nvar file = exports.file = function () {\n  var args = [].slice.call(arguments).filter(function (arg) {\n    return arg != null;\n  }); //path.join breaks if it's a not a string, so just skip this.\n\n  for (var i in args) if ('string' !== typeof args[i]) return;\n\n  var file = path.join.apply(null, args);\n  var content;\n\n  try {\n    return fs.readFileSync(file, 'utf-8');\n  } catch (err) {\n    return;\n  }\n};\n\nvar json = exports.json = function () {\n  var content = file.apply(null, arguments);\n  return content ? parse(content) : null;\n};\n\nvar env = exports.env = function (prefix, env) {\n  env = env || process.env;\n  var obj = {};\n  var l = prefix.length;\n\n  for (var k in env) {\n    if (k.toLowerCase().indexOf(prefix.toLowerCase()) === 0) {\n      var keypath = k.substring(l).split('__'); // Trim empty strings from keypath array\n\n      var _emptyStringIndex;\n\n      while ((_emptyStringIndex = keypath.indexOf('')) > -1) {\n        keypath.splice(_emptyStringIndex, 1);\n      }\n\n      var cursor = obj;\n      keypath.forEach(function _buildSubObj(_subkey, i) {\n        // (check for _subkey first so we ignore empty strings)\n        // (check for cursor to avoid assignment to primitive objects)\n        if (!_subkey || typeof cursor !== 'object') return; // If this is the last key, just stuff the value in there\n        // Assigns actual value from env variable to final key\n        // (unless it's just an empty string- in that case use the last valid key)\n\n        if (i === keypath.length - 1) cursor[_subkey] = env[k]; // Build sub-object if nothing already exists at the keypath\n\n        if (cursor[_subkey] === undefined) cursor[_subkey] = {}; // Increment cursor used to track the object at the current depth\n\n        cursor = cursor[_subkey];\n      });\n    }\n  }\n\n  return obj;\n};\n\nvar find = exports.find = function () {\n  var rel = path.join.apply(null, [].slice.call(arguments));\n\n  function find(start, rel) {\n    var file = path.join(start, rel);\n\n    try {\n      fs.statSync(file);\n      return file;\n    } catch (err) {\n      if (path.dirname(start) !== start) // root\n        return find(path.dirname(start), rel);\n    }\n  }\n\n  return find(process.cwd(), rel);\n};","map":{"version":3,"sources":["C:/Users/anafe/OneDrive/Documentos/projeto_com_react2/src/backend/node/node_modules/rc/lib/utils.js"],"names":["fs","require","ini","path","stripJsonComments","parse","exports","content","test","JSON","file","args","slice","call","arguments","filter","arg","i","join","apply","readFileSync","err","json","env","prefix","process","obj","l","length","k","toLowerCase","indexOf","keypath","substring","split","_emptyStringIndex","splice","cursor","forEach","_buildSubObj","_subkey","undefined","find","rel","start","statSync","dirname","cwd"],"mappings":"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","sourcesContent":["'use strict';\nvar fs   = require('fs')\nvar ini  = require('ini')\nvar path = require('path')\nvar stripJsonComments = require('strip-json-comments')\n\nvar parse = exports.parse = function (content) {\n\n  //if it ends in .json or starts with { then it must be json.\n  //must be done this way, because ini accepts everything.\n  //can't just try and parse it and let it throw if it's not ini.\n  //everything is ini. even json with a syntax error.\n\n  if(/^\\s*{/.test(content))\n    return JSON.parse(stripJsonComments(content))\n  return ini.parse(content)\n\n}\n\nvar file = exports.file = function () {\n  var args = [].slice.call(arguments).filter(function (arg) { return arg != null })\n\n  //path.join breaks if it's a not a string, so just skip this.\n  for(var i in args)\n    if('string' !== typeof args[i])\n      return\n\n  var file = path.join.apply(null, args)\n  var content\n  try {\n    return fs.readFileSync(file,'utf-8')\n  } catch (err) {\n    return\n  }\n}\n\nvar json = exports.json = function () {\n  var content = file.apply(null, arguments)\n  return content ? parse(content) : null\n}\n\nvar env = exports.env = function (prefix, env) {\n  env = env || process.env\n  var obj = {}\n  var l = prefix.length\n  for(var k in env) {\n    if(k.toLowerCase().indexOf(prefix.toLowerCase()) === 0) {\n\n      var keypath = k.substring(l).split('__')\n\n      // Trim empty strings from keypath array\n      var _emptyStringIndex\n      while ((_emptyStringIndex=keypath.indexOf('')) > -1) {\n        keypath.splice(_emptyStringIndex, 1)\n      }\n\n      var cursor = obj\n      keypath.forEach(function _buildSubObj(_subkey,i){\n\n        // (check for _subkey first so we ignore empty strings)\n        // (check for cursor to avoid assignment to primitive objects)\n        if (!_subkey || typeof cursor !== 'object')\n          return\n\n        // If this is the last key, just stuff the value in there\n        // Assigns actual value from env variable to final key\n        // (unless it's just an empty string- in that case use the last valid key)\n        if (i === keypath.length-1)\n          cursor[_subkey] = env[k]\n\n\n        // Build sub-object if nothing already exists at the keypath\n        if (cursor[_subkey] === undefined)\n          cursor[_subkey] = {}\n\n        // Increment cursor used to track the object at the current depth\n        cursor = cursor[_subkey]\n\n      })\n\n    }\n\n  }\n\n  return obj\n}\n\nvar find = exports.find = function () {\n  var rel = path.join.apply(null, [].slice.call(arguments))\n\n  function find(start, rel) {\n    var file = path.join(start, rel)\n    try {\n      fs.statSync(file)\n      return file\n    } catch (err) {\n      if(path.dirname(start) !== start) // root\n        return find(path.dirname(start), rel)\n    }\n  }\n  return find(process.cwd(), rel)\n}\n\n\n"]},"metadata":{},"sourceType":"module"}