{"ast":null,"code":"let assert = require('assert');\n\nlet exec = require('child_process').execSync;\n\nsuite('concurrent', function () {\n  this.timeout(7000);\n  test(' simple concurrent prerequisites 1', function () {\n    let out = exec('./node_modules/.bin/jake -q concurrent:simple1').toString().trim();\n    assert.equal('Started A\\nStarted B\\nFinished B\\nFinished A', out);\n  });\n  test(' simple concurrent prerequisites 2', function () {\n    let out = exec('./node_modules/.bin/jake -q concurrent:simple2').toString().trim();\n    assert.equal('Started C\\nStarted D\\nFinished C\\nFinished D', out);\n  });\n  test(' sequential concurrent prerequisites', function () {\n    let out = exec('./node_modules/.bin/jake -q concurrent:seqconcurrent').toString().trim();\n    assert.equal('Started A\\nStarted B\\nFinished B\\nFinished A\\nStarted C\\nStarted D\\nFinished C\\nFinished D', out);\n  });\n  test(' concurrent concurrent prerequisites', function () {\n    let out = exec('./node_modules/.bin/jake -q concurrent:concurrentconcurrent').toString().trim();\n    assert.equal('Started A\\nStarted B\\nStarted C\\nStarted D\\nFinished B\\nFinished C\\nFinished A\\nFinished D', out);\n  });\n  test(' concurrent prerequisites with subdependency', function () {\n    let out = exec('./node_modules/.bin/jake -q concurrent:subdep').toString().trim();\n    assert.equal('Started A\\nFinished A\\nStarted Ba\\nFinished Ba', out);\n  });\n  test(' failing in concurrent prerequisites', function () {\n    try {\n      exec('./node_modules/.bin/jake -q concurrent:Cfail');\n    } catch (err) {\n      assert(err.message.indexOf('Command failed') > -1);\n    }\n  });\n});","map":{"version":3,"sources":["C:/Users/anafe/OneDrive/Documentos/projeto_com_react2/src/backend/node/node_modules/jake/test/integration/concurrent.js"],"names":["assert","require","exec","execSync","suite","timeout","test","out","toString","trim","equal","err","message","indexOf"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,eAAD,CAAP,CAAyBE,QAApC;;AAEAC,KAAK,CAAC,YAAD,EAAe,YAAY;AAE9B,OAAKC,OAAL,CAAa,IAAb;AAEAC,EAAAA,IAAI,CAAC,oCAAD,EAAuC,YAAY;AACrD,QAAIC,GAAG,GAAGL,IAAI,CAAC,gDAAD,CAAJ,CAAuDM,QAAvD,GAAkEC,IAAlE,EAAV;AACAT,IAAAA,MAAM,CAACU,KAAP,CAAa,8CAAb,EAA6DH,GAA7D;AACD,GAHG,CAAJ;AAKAD,EAAAA,IAAI,CAAC,oCAAD,EAAuC,YAAY;AACrD,QAAIC,GAAG,GAAGL,IAAI,CAAC,gDAAD,CAAJ,CAAuDM,QAAvD,GAAkEC,IAAlE,EAAV;AACAT,IAAAA,MAAM,CAACU,KAAP,CAAa,8CAAb,EAA6DH,GAA7D;AACD,GAHG,CAAJ;AAKAD,EAAAA,IAAI,CAAC,sCAAD,EAAyC,YAAY;AACvD,QAAIC,GAAG,GAAGL,IAAI,CAAC,sDAAD,CAAJ,CAA6DM,QAA7D,GAAwEC,IAAxE,EAAV;AACAT,IAAAA,MAAM,CAACU,KAAP,CAAa,4FAAb,EAA2GH,GAA3G;AACD,GAHG,CAAJ;AAKAD,EAAAA,IAAI,CAAC,sCAAD,EAAyC,YAAY;AACvD,QAAIC,GAAG,GAAGL,IAAI,CAAC,6DAAD,CAAJ,CAAoEM,QAApE,GAA+EC,IAA/E,EAAV;AACAT,IAAAA,MAAM,CAACU,KAAP,CAAa,4FAAb,EAA2GH,GAA3G;AACD,GAHG,CAAJ;AAKAD,EAAAA,IAAI,CAAC,8CAAD,EAAiD,YAAY;AAC/D,QAAIC,GAAG,GAAGL,IAAI,CAAC,+CAAD,CAAJ,CAAsDM,QAAtD,GAAiEC,IAAjE,EAAV;AACAT,IAAAA,MAAM,CAACU,KAAP,CAAa,gDAAb,EAA+DH,GAA/D;AACD,GAHG,CAAJ;AAKAD,EAAAA,IAAI,CAAC,sCAAD,EAAyC,YAAY;AACvD,QAAI;AACFJ,MAAAA,IAAI,CAAC,8CAAD,CAAJ;AACD,KAFD,CAGA,OAAMS,GAAN,EAAW;AACTX,MAAAA,MAAM,CAACW,GAAG,CAACC,OAAJ,CAAYC,OAAZ,CAAoB,gBAApB,IAAwC,CAAC,CAA1C,CAAN;AACD;AACF,GAPG,CAAJ;AASD,CAtCI,CAAL","sourcesContent":["let assert = require('assert');\nlet exec = require('child_process').execSync;\n\nsuite('concurrent', function () {\n\n  this.timeout(7000);\n\n  test(' simple concurrent prerequisites 1', function () {\n    let out = exec('./node_modules/.bin/jake -q concurrent:simple1').toString().trim()\n    assert.equal('Started A\\nStarted B\\nFinished B\\nFinished A', out);\n  });\n\n  test(' simple concurrent prerequisites 2', function () {\n    let out = exec('./node_modules/.bin/jake -q concurrent:simple2').toString().trim()\n    assert.equal('Started C\\nStarted D\\nFinished C\\nFinished D', out);\n  });\n\n  test(' sequential concurrent prerequisites', function () {\n    let out = exec('./node_modules/.bin/jake -q concurrent:seqconcurrent').toString().trim()\n    assert.equal('Started A\\nStarted B\\nFinished B\\nFinished A\\nStarted C\\nStarted D\\nFinished C\\nFinished D', out);\n  });\n\n  test(' concurrent concurrent prerequisites', function () {\n    let out = exec('./node_modules/.bin/jake -q concurrent:concurrentconcurrent').toString().trim()\n    assert.equal('Started A\\nStarted B\\nStarted C\\nStarted D\\nFinished B\\nFinished C\\nFinished A\\nFinished D', out);\n  });\n\n  test(' concurrent prerequisites with subdependency', function () {\n    let out = exec('./node_modules/.bin/jake -q concurrent:subdep').toString().trim()\n    assert.equal('Started A\\nFinished A\\nStarted Ba\\nFinished Ba', out);\n  });\n\n  test(' failing in concurrent prerequisites', function () {\n    try {\n      exec('./node_modules/.bin/jake -q concurrent:Cfail');\n    }\n    catch(err) {\n      assert(err.message.indexOf('Command failed') > -1);\n    }\n  });\n\n});\n"]},"metadata":{},"sourceType":"module"}