{"ast":null,"code":"var fs = require('fs');\n\nvar execSync = require('child_process').execSync;\n\nvar exec = function (cmd) {\n  execSync(cmd, {\n    stdio: 'inherit'\n  });\n};\n/* global jake, task, desc, publishTask */\n\n\ntask('build', ['lint', 'clean', 'browserify', 'minify'], function () {\n  console.log('Build completed.');\n});\ndesc('Cleans browerified/minified files and package files');\ntask('clean', ['clobber'], function () {\n  jake.rmRf('./ejs.js');\n  jake.rmRf('./ejs.min.js');\n  console.log('Cleaned up compiled files.');\n});\ndesc('Lints the source code');\ntask('lint', ['clean'], function () {\n  exec('./node_modules/.bin/eslint \"**/*.js\"');\n  console.log('Linting completed.');\n});\ntask('browserify', function () {\n  exec('./node_modules/browserify/bin/cmd.js --standalone ejs lib/ejs.js > ejs.js');\n  console.log('Browserification completed.');\n});\ntask('minify', function () {\n  exec('./node_modules/uglify-js/bin/uglifyjs ejs.js > ejs.min.js');\n  console.log('Minification completed.');\n});\ndesc('Generates the EJS API docs');\ntask('doc', function (dev) {\n  jake.rmRf('out');\n  var p = dev ? '-p' : '';\n  exec('./node_modules/.bin/jsdoc ' + p + ' -c jsdoc.json lib/* docs/jsdoc/*');\n  console.log('Documentation generated.');\n});\ndesc('Publishes the EJS API docs');\ntask('docPublish', ['doc'], function () {\n  fs.writeFileSync('out/CNAME', 'api.ejs.co');\n  console.log('Pushing docs to gh-pages...');\n  exec('./node_modules/.bin/git-directory-deploy --directory out/');\n  console.log('Docs published to gh-pages.');\n});\ndesc('Runs the EJS test suite');\ntask('test', ['lint'], function () {\n  exec('./node_modules/.bin/mocha');\n});\npublishTask('ejs', ['build'], function () {\n  this.packageFiles.include(['jakefile.js', 'README.md', 'LICENSE', 'package.json', 'ejs.js', 'ejs.min.js', 'lib/**', 'bin/**', 'usage.txt']);\n});\njake.Task.publish.on('complete', function () {\n  console.log('Updating hosted docs...');\n  console.log('If this fails, run jake docPublish to re-try.');\n  jake.Task.docPublish.invoke();\n});","map":{"version":3,"sources":["C:/Users/anafe/OneDrive/Documentos/projeto_com_react2/src/backend/node/node_modules/ejs/jakefile.js"],"names":["fs","require","execSync","exec","cmd","stdio","task","console","log","desc","jake","rmRf","dev","p","writeFileSync","publishTask","packageFiles","include","Task","publish","on","docPublish","invoke"],"mappings":"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","sourcesContent":["var fs = require('fs');\nvar execSync = require('child_process').execSync;\nvar exec = function (cmd) {\n  execSync(cmd, {stdio: 'inherit'});\n};\n\n/* global jake, task, desc, publishTask */\n\ntask('build', ['lint', 'clean', 'browserify', 'minify'], function () {\n  console.log('Build completed.');\n});\n\ndesc('Cleans browerified/minified files and package files');\ntask('clean', ['clobber'], function () {\n  jake.rmRf('./ejs.js');\n  jake.rmRf('./ejs.min.js');\n  console.log('Cleaned up compiled files.');\n});\n\ndesc('Lints the source code');\ntask('lint', ['clean'], function () {\n  exec('./node_modules/.bin/eslint \"**/*.js\"');\n  console.log('Linting completed.');\n});\n\ntask('browserify', function () {\n  exec('./node_modules/browserify/bin/cmd.js --standalone ejs lib/ejs.js > ejs.js');\n  console.log('Browserification completed.');\n});\n\ntask('minify', function () {\n  exec('./node_modules/uglify-js/bin/uglifyjs ejs.js > ejs.min.js');\n  console.log('Minification completed.');\n});\n\ndesc('Generates the EJS API docs');\ntask('doc', function (dev) {\n  jake.rmRf('out');\n  var p = dev ? '-p' : '';\n  exec('./node_modules/.bin/jsdoc ' + p + ' -c jsdoc.json lib/* docs/jsdoc/*');\n  console.log('Documentation generated.');\n});\n\ndesc('Publishes the EJS API docs');\ntask('docPublish', ['doc'], function () {\n  fs.writeFileSync('out/CNAME', 'api.ejs.co');\n  console.log('Pushing docs to gh-pages...');\n  exec('./node_modules/.bin/git-directory-deploy --directory out/');\n  console.log('Docs published to gh-pages.');\n});\n\ndesc('Runs the EJS test suite');\ntask('test', ['lint'], function () {\n  exec('./node_modules/.bin/mocha');\n});\n\npublishTask('ejs', ['build'], function () {\n  this.packageFiles.include([\n    'jakefile.js',\n    'README.md',\n    'LICENSE',\n    'package.json',\n    'ejs.js',\n    'ejs.min.js',\n    'lib/**',\n    'bin/**',\n    'usage.txt'\n  ]);\n});\n\njake.Task.publish.on('complete', function () {\n  console.log('Updating hosted docs...');\n  console.log('If this fails, run jake docPublish to re-try.');\n  jake.Task.docPublish.invoke();\n});\n"]},"metadata":{},"sourceType":"module"}