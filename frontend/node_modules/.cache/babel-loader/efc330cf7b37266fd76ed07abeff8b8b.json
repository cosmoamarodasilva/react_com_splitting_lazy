{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["/// <reference types=\"node\" />\n/// <reference lib=\"es2016\" />\n/// <reference lib=\"es2017.sharedmemory\" />\n/// <reference lib=\"esnext.asynciterable\" />\n/// <reference lib=\"dom\" />\ndeclare type TypedArray = Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | Uint16Array | Int32Array | Uint32Array | Float32Array | Float64Array;\ndeclare type Primitive = null | undefined | string | number | boolean | Symbol;\nexport interface ArrayLike {\n    length: number;\n}\nexport interface Class<T = unknown> {\n    new (...args: any[]): T;\n}\ndeclare type DomElement = object & {\n    nodeType: 1;\n    nodeName: string;\n};\ndeclare type NodeStream = object & {\n    pipe: Function;\n};\nexport declare const enum TypeName {\n    null = \"null\",\n    boolean = \"boolean\",\n    undefined = \"undefined\",\n    string = \"string\",\n    number = \"number\",\n    symbol = \"symbol\",\n    Function = \"Function\",\n    GeneratorFunction = \"GeneratorFunction\",\n    AsyncFunction = \"AsyncFunction\",\n    Observable = \"Observable\",\n    Array = \"Array\",\n    Buffer = \"Buffer\",\n    Object = \"Object\",\n    RegExp = \"RegExp\",\n    Date = \"Date\",\n    Error = \"Error\",\n    Map = \"Map\",\n    Set = \"Set\",\n    WeakMap = \"WeakMap\",\n    WeakSet = \"WeakSet\",\n    Int8Array = \"Int8Array\",\n    Uint8Array = \"Uint8Array\",\n    Uint8ClampedArray = \"Uint8ClampedArray\",\n    Int16Array = \"Int16Array\",\n    Uint16Array = \"Uint16Array\",\n    Int32Array = \"Int32Array\",\n    Uint32Array = \"Uint32Array\",\n    Float32Array = \"Float32Array\",\n    Float64Array = \"Float64Array\",\n    ArrayBuffer = \"ArrayBuffer\",\n    SharedArrayBuffer = \"SharedArrayBuffer\",\n    DataView = \"DataView\",\n    Promise = \"Promise\",\n    URL = \"URL\"\n}\ndeclare function is(value: unknown): TypeName;\ndeclare namespace is {\n    const undefined: (value: unknown) => value is undefined;\n    const string: (value: unknown) => value is string;\n    const number: (value: unknown) => value is number;\n    const function_: (value: unknown) => value is Function;\n    const null_: (value: unknown) => value is null;\n    const class_: (value: unknown) => value is Class<unknown>;\n    const boolean: (value: unknown) => value is boolean;\n    const symbol: (value: unknown) => value is Symbol;\n    const numericString: (value: unknown) => boolean;\n    const array: (arg: any) => arg is any[];\n    const buffer: (input: unknown) => input is Buffer;\n    const nullOrUndefined: (value: unknown) => value is null | undefined;\n    const object: (value: unknown) => value is object;\n    const iterable: (value: unknown) => value is IterableIterator<unknown>;\n    const asyncIterable: (value: unknown) => value is AsyncIterableIterator<unknown>;\n    const generator: (value: unknown) => value is Generator;\n    const nativePromise: (value: unknown) => value is Promise<unknown>;\n    const promise: (value: unknown) => value is Promise<unknown>;\n    const generatorFunction: (value: unknown) => value is GeneratorFunction;\n    const asyncFunction: (value: unknown) => value is Function;\n    const boundFunction: (value: unknown) => value is Function;\n    const regExp: (value: unknown) => value is RegExp;\n    const date: (value: unknown) => value is Date;\n    const error: (value: unknown) => value is Error;\n    const map: (value: unknown) => value is Map<unknown, unknown>;\n    const set: (value: unknown) => value is Set<unknown>;\n    const weakMap: (value: unknown) => value is WeakMap<object, unknown>;\n    const weakSet: (value: unknown) => value is WeakSet<object>;\n    const int8Array: (value: unknown) => value is Int8Array;\n    const uint8Array: (value: unknown) => value is Uint8Array;\n    const uint8ClampedArray: (value: unknown) => value is Uint8ClampedArray;\n    const int16Array: (value: unknown) => value is Int16Array;\n    const uint16Array: (value: unknown) => value is Uint16Array;\n    const int32Array: (value: unknown) => value is Int32Array;\n    const uint32Array: (value: unknown) => value is Uint32Array;\n    const float32Array: (value: unknown) => value is Float32Array;\n    const float64Array: (value: unknown) => value is Float64Array;\n    const arrayBuffer: (value: unknown) => value is ArrayBuffer;\n    const sharedArrayBuffer: (value: unknown) => value is SharedArrayBuffer;\n    const dataView: (value: unknown) => value is DataView;\n    const directInstanceOf: <T>(instance: unknown, klass: Class<T>) => instance is T;\n    const urlInstance: (value: unknown) => value is URL;\n    const urlString: (value: unknown) => boolean;\n    const truthy: (value: unknown) => boolean;\n    const falsy: (value: unknown) => boolean;\n    const nan: (value: unknown) => boolean;\n    const primitive: (value: unknown) => value is Primitive;\n    const integer: (value: unknown) => value is number;\n    const safeInteger: (value: unknown) => value is number;\n    const plainObject: (value: unknown) => boolean;\n    const typedArray: (value: unknown) => value is TypedArray;\n    const arrayLike: (value: unknown) => value is ArrayLike;\n    const inRange: (value: number, range: number | number[]) => boolean;\n    const domElement: (value: unknown) => value is DomElement;\n    const observable: (value: unknown) => boolean;\n    const nodeStream: (value: unknown) => value is NodeStream;\n    const infinite: (value: unknown) => boolean;\n    const even: (value: number) => boolean;\n    const odd: (value: number) => boolean;\n    const emptyArray: (value: unknown) => boolean;\n    const nonEmptyArray: (value: unknown) => boolean;\n    const emptyString: (value: unknown) => boolean;\n    const nonEmptyString: (value: unknown) => boolean;\n    const emptyStringOrWhitespace: (value: unknown) => boolean;\n    const emptyObject: (value: unknown) => boolean;\n    const nonEmptyObject: (value: unknown) => boolean;\n    const emptySet: (value: unknown) => boolean;\n    const nonEmptySet: (value: unknown) => boolean;\n    const emptyMap: (value: unknown) => boolean;\n    const nonEmptyMap: (value: unknown) => boolean;\n    const any: (predicate: unknown, ...values: unknown[]) => boolean;\n    const all: (predicate: unknown, ...values: unknown[]) => boolean;\n}\nexport default is;\n"]},"metadata":{},"sourceType":"module"}