{"ast":null,"code":"#!/usr/bin/env node\n\nvar nopt = require(\"../lib/nopt\"),\n    types = {\n  num: Number,\n  bool: Boolean,\n  help: Boolean,\n  list: Array,\n  \"num-list\": [Number, Array],\n  \"str-list\": [String, Array],\n  \"bool-list\": [Boolean, Array],\n  str: String\n},\n    shorthands = {\n  s: [\"--str\", \"astring\"],\n  b: [\"--bool\"],\n  nb: [\"--no-bool\"],\n  tft: [\"--bool-list\", \"--no-bool-list\", \"--bool-list\", \"true\"],\n  \"?\": [\"--help\"],\n  h: [\"--help\"],\n  H: [\"--help\"],\n  n: [\"--num\", \"125\"]\n},\n    parsed = nopt(types, shorthands, process.argv, 2);\n\nconsole.log(\"parsed\", parsed);\n\nif (parsed.help) {\n  console.log(\"\");\n  console.log(\"nopt cli tester\");\n  console.log(\"\");\n  console.log(\"types\");\n  console.log(Object.keys(types).map(function M(t) {\n    var type = types[t];\n\n    if (Array.isArray(type)) {\n      return [t, type.map(function (type) {\n        return type.name;\n      })];\n    }\n\n    return [t, type && type.name];\n  }).reduce(function (s, i) {\n    s[i[0]] = i[1];\n    return s;\n  }, {}));\n  console.log(\"\");\n  console.log(\"shorthands\");\n  console.log(shorthands);\n}","map":{"version":3,"sources":["C:/Users/anafe/OneDrive/Documentos/projeto_com_react2/src/backend/node/node_modules/nopt/bin/nopt.js"],"names":["nopt","require","types","num","Number","bool","Boolean","help","list","Array","String","str","shorthands","s","b","nb","tft","h","H","n","parsed","process","argv","console","log","Object","keys","map","M","t","type","isArray","name","reduce","i"],"mappings":"AAAA;;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,aAAD,CAAlB;AAAA,IACIC,KAAK,GAAG;AAAEC,EAAAA,GAAG,EAAEC,MAAP;AACEC,EAAAA,IAAI,EAAEC,OADR;AAEEC,EAAAA,IAAI,EAAED,OAFR;AAGEE,EAAAA,IAAI,EAAEC,KAHR;AAIE,cAAY,CAACL,MAAD,EAASK,KAAT,CAJd;AAKE,cAAY,CAACC,MAAD,EAASD,KAAT,CALd;AAME,eAAa,CAACH,OAAD,EAAUG,KAAV,CANf;AAOEE,EAAAA,GAAG,EAAED;AAPP,CADZ;AAAA,IASIE,UAAU,GAAG;AAAEC,EAAAA,CAAC,EAAE,CAAE,OAAF,EAAW,SAAX,CAAL;AACEC,EAAAA,CAAC,EAAE,CAAE,QAAF,CADL;AAEEC,EAAAA,EAAE,EAAE,CAAE,WAAF,CAFN;AAGEC,EAAAA,GAAG,EAAE,CAAE,aAAF,EAAiB,gBAAjB,EAAmC,aAAnC,EAAkD,MAAlD,CAHP;AAIE,OAAK,CAAC,QAAD,CAJP;AAKEC,EAAAA,CAAC,EAAE,CAAC,QAAD,CALL;AAMEC,EAAAA,CAAC,EAAE,CAAC,QAAD,CANL;AAOEC,EAAAA,CAAC,EAAE,CAAE,OAAF,EAAW,KAAX;AAPL,CATjB;AAAA,IAiBIC,MAAM,GAAGpB,IAAI,CAAEE,KAAF,EACEU,UADF,EAEES,OAAO,CAACC,IAFV,EAGE,CAHF,CAjBjB;;AAsBAC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;;AAEA,IAAIA,MAAM,CAACb,IAAX,EAAiB;AACfgB,EAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYxB,KAAZ,EAAmByB,GAAnB,CAAuB,SAASC,CAAT,CAAYC,CAAZ,EAAe;AAChD,QAAIC,IAAI,GAAG5B,KAAK,CAAC2B,CAAD,CAAhB;;AACA,QAAIpB,KAAK,CAACsB,OAAN,CAAcD,IAAd,CAAJ,EAAyB;AACvB,aAAO,CAACD,CAAD,EAAIC,IAAI,CAACH,GAAL,CAAS,UAAUG,IAAV,EAAgB;AAAE,eAAOA,IAAI,CAACE,IAAZ;AAAkB,OAA7C,CAAJ,CAAP;AACD;;AACD,WAAO,CAACH,CAAD,EAAIC,IAAI,IAAIA,IAAI,CAACE,IAAjB,CAAP;AACD,GANW,EAMTC,MANS,CAMF,UAAUpB,CAAV,EAAaqB,CAAb,EAAgB;AACxBrB,IAAAA,CAAC,CAACqB,CAAC,CAAC,CAAD,CAAF,CAAD,GAAUA,CAAC,CAAC,CAAD,CAAX;AACA,WAAOrB,CAAP;AACD,GATW,EAST,EATS,CAAZ;AAUAU,EAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAZ;AACD","sourcesContent":["#!/usr/bin/env node\nvar nopt = require(\"../lib/nopt\")\n  , types = { num: Number\n            , bool: Boolean\n            , help: Boolean\n            , list: Array\n            , \"num-list\": [Number, Array]\n            , \"str-list\": [String, Array]\n            , \"bool-list\": [Boolean, Array]\n            , str: String }\n  , shorthands = { s: [ \"--str\", \"astring\" ]\n                 , b: [ \"--bool\" ]\n                 , nb: [ \"--no-bool\" ]\n                 , tft: [ \"--bool-list\", \"--no-bool-list\", \"--bool-list\", \"true\" ]\n                 , \"?\": [\"--help\"]\n                 , h: [\"--help\"]\n                 , H: [\"--help\"]\n                 , n: [ \"--num\", \"125\" ] }\n  , parsed = nopt( types\n                 , shorthands\n                 , process.argv\n                 , 2 )\n\nconsole.log(\"parsed\", parsed)\n\nif (parsed.help) {\n  console.log(\"\")\n  console.log(\"nopt cli tester\")\n  console.log(\"\")\n  console.log(\"types\")\n  console.log(Object.keys(types).map(function M (t) {\n    var type = types[t]\n    if (Array.isArray(type)) {\n      return [t, type.map(function (type) { return type.name })]\n    }\n    return [t, type && type.name]\n  }).reduce(function (s, i) {\n    s[i[0]] = i[1]\n    return s\n  }, {}))\n  console.log(\"\")\n  console.log(\"shorthands\")\n  console.log(shorthands)\n}\n"]},"metadata":{},"sourceType":"module"}