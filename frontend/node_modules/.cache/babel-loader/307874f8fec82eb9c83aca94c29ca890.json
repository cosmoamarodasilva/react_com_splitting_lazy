{"ast":null,"code":"/*!\n * depd\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Module dependencies.\n * @private\n */\n\nvar EventEmitter = require('events').EventEmitter;\n/**\n * Module exports.\n * @public\n */\n\n\nlazyProperty(module.exports, 'callSiteToString', function callSiteToString() {\n  var limit = Error.stackTraceLimit;\n  var obj = {};\n  var prep = Error.prepareStackTrace;\n\n  function prepareObjectStackTrace(obj, stack) {\n    return stack;\n  }\n\n  Error.prepareStackTrace = prepareObjectStackTrace;\n  Error.stackTraceLimit = 2; // capture the stack\n\n  Error.captureStackTrace(obj); // slice the stack\n\n  var stack = obj.stack.slice();\n  Error.prepareStackTrace = prep;\n  Error.stackTraceLimit = limit;\n  return stack[0].toString ? toString : require('./callsite-tostring');\n});\nlazyProperty(module.exports, 'eventListenerCount', function eventListenerCount() {\n  return EventEmitter.listenerCount || require('./event-listener-count');\n});\n/**\n * Define a lazy property.\n */\n\nfunction lazyProperty(obj, prop, getter) {\n  function get() {\n    var val = getter();\n    Object.defineProperty(obj, prop, {\n      configurable: true,\n      enumerable: true,\n      value: val\n    });\n    return val;\n  }\n\n  Object.defineProperty(obj, prop, {\n    configurable: true,\n    enumerable: true,\n    get: get\n  });\n}\n/**\n * Call toString() on the obj\n */\n\n\nfunction toString(obj) {\n  return obj.toString();\n}","map":{"version":3,"sources":["C:/Users/anafe/OneDrive/Documentos/projeto_com_react2/src/backend/node/node_modules/depd/lib/compat/index.js"],"names":["EventEmitter","require","lazyProperty","module","exports","callSiteToString","limit","Error","stackTraceLimit","obj","prep","prepareStackTrace","prepareObjectStackTrace","stack","captureStackTrace","slice","toString","eventListenerCount","listenerCount","prop","getter","get","val","Object","defineProperty","configurable","enumerable","value"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,YAArC;AAEA;AACA;AACA;AACA;;;AAEAE,YAAY,CAACC,MAAM,CAACC,OAAR,EAAiB,kBAAjB,EAAqC,SAASC,gBAAT,GAA6B;AAC5E,MAAIC,KAAK,GAAGC,KAAK,CAACC,eAAlB;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,IAAI,GAAGH,KAAK,CAACI,iBAAjB;;AAEA,WAASC,uBAAT,CAAkCH,GAAlC,EAAuCI,KAAvC,EAA8C;AAC5C,WAAOA,KAAP;AACD;;AAEDN,EAAAA,KAAK,CAACI,iBAAN,GAA0BC,uBAA1B;AACAL,EAAAA,KAAK,CAACC,eAAN,GAAwB,CAAxB,CAV4E,CAY5E;;AACAD,EAAAA,KAAK,CAACO,iBAAN,CAAwBL,GAAxB,EAb4E,CAe5E;;AACA,MAAII,KAAK,GAAGJ,GAAG,CAACI,KAAJ,CAAUE,KAAV,EAAZ;AAEAR,EAAAA,KAAK,CAACI,iBAAN,GAA0BD,IAA1B;AACAH,EAAAA,KAAK,CAACC,eAAN,GAAwBF,KAAxB;AAEA,SAAOO,KAAK,CAAC,CAAD,CAAL,CAASG,QAAT,GAAoBA,QAApB,GAA+Bf,OAAO,CAAC,qBAAD,CAA7C;AACD,CAtBW,CAAZ;AAwBAC,YAAY,CAACC,MAAM,CAACC,OAAR,EAAiB,oBAAjB,EAAuC,SAASa,kBAAT,GAA+B;AAChF,SAAOjB,YAAY,CAACkB,aAAb,IAA8BjB,OAAO,CAAC,wBAAD,CAA5C;AACD,CAFW,CAAZ;AAIA;AACA;AACA;;AAEA,SAASC,YAAT,CAAuBO,GAAvB,EAA4BU,IAA5B,EAAkCC,MAAlC,EAA0C;AACxC,WAASC,GAAT,GAAgB;AACd,QAAIC,GAAG,GAAGF,MAAM,EAAhB;AAEAG,IAAAA,MAAM,CAACC,cAAP,CAAsBf,GAAtB,EAA2BU,IAA3B,EAAiC;AAC/BM,MAAAA,YAAY,EAAE,IADiB;AAE/BC,MAAAA,UAAU,EAAE,IAFmB;AAG/BC,MAAAA,KAAK,EAAEL;AAHwB,KAAjC;AAMA,WAAOA,GAAP;AACD;;AAEDC,EAAAA,MAAM,CAACC,cAAP,CAAsBf,GAAtB,EAA2BU,IAA3B,EAAiC;AAC/BM,IAAAA,YAAY,EAAE,IADiB;AAE/BC,IAAAA,UAAU,EAAE,IAFmB;AAG/BL,IAAAA,GAAG,EAAEA;AAH0B,GAAjC;AAKD;AAED;AACA;AACA;;;AAEA,SAASL,QAAT,CAAmBP,GAAnB,EAAwB;AACtB,SAAOA,GAAG,CAACO,QAAJ,EAAP;AACD","sourcesContent":["/*!\n * depd\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar EventEmitter = require('events').EventEmitter\n\n/**\n * Module exports.\n * @public\n */\n\nlazyProperty(module.exports, 'callSiteToString', function callSiteToString () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  function prepareObjectStackTrace (obj, stack) {\n    return stack\n  }\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = 2\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice the stack\n  var stack = obj.stack.slice()\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack[0].toString ? toString : require('./callsite-tostring')\n})\n\nlazyProperty(module.exports, 'eventListenerCount', function eventListenerCount () {\n  return EventEmitter.listenerCount || require('./event-listener-count')\n})\n\n/**\n * Define a lazy property.\n */\n\nfunction lazyProperty (obj, prop, getter) {\n  function get () {\n    var val = getter()\n\n    Object.defineProperty(obj, prop, {\n      configurable: true,\n      enumerable: true,\n      value: val\n    })\n\n    return val\n  }\n\n  Object.defineProperty(obj, prop, {\n    configurable: true,\n    enumerable: true,\n    get: get\n  })\n}\n\n/**\n * Call toString() on the obj\n */\n\nfunction toString (obj) {\n  return obj.toString()\n}\n"]},"metadata":{},"sourceType":"module"}