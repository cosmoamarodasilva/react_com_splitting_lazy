{"ast":null,"code":"#!/usr/bin/env node\n\nconst touch = require(\"../index.js\");\n\nconst usage = code => {\n  console[code ? 'error' : 'log']('usage:\\n' + 'touch [-acfm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...');\n  process.exit(code);\n};\n\nconst singleFlags = {\n  a: 'atime',\n  m: 'mtime',\n  c: 'nocreate',\n  f: 'force'\n};\nconst singleOpts = {\n  r: 'ref',\n  t: 'time'\n};\nconst files = [];\nconst args = process.argv.slice(2);\nconst options = {};\n\nfor (let i = 0; i < args.length; i++) {\n  const arg = args[i];\n\n  if (!arg.match(/^-/)) {\n    files.push(arg);\n    continue;\n  } // expand shorthands\n\n\n  if (arg.charAt(1) !== '-') {\n    const expand = [];\n\n    for (let f = 1; f < arg.length; f++) {\n      const fc = arg.charAt(f);\n      const sf = singleFlags[fc];\n      const so = singleOpts[fc];\n      if (sf) expand.push('--' + sf);else if (so) {\n        const soslice = arg.slice(f + 1);\n        const soval = soslice.charAt(0) === '=' ? soslice : '=' + soslice;\n        expand.push('--' + so + soval);\n        f = arg.length;\n      } else if (arg !== '-' + fc) expand.push('-' + fc);\n    }\n\n    if (expand.length) {\n      args.splice.apply(args, [i, 1].concat(expand));\n      i--;\n      continue;\n    }\n  }\n\n  const argsplit = arg.split('=');\n  const key = argsplit.shift().replace(/^\\-\\-/, '');\n  const val = argsplit.length ? argsplit.join('=') : null;\n\n  switch (key) {\n    case 'time':\n      const timestr = val || args[++i]; // [-t [[CC]YY]MMDDhhmm[.SS]]\n\n      const parsedtime = timestr.match(/^(([0-9]{2})?([0-9]{2}))?([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2})(\\.([0-9]{2}))?$/);\n\n      if (!parsedtime) {\n        console.error('touch: out of range or illegal ' + 'time specification: ' + '[[CC]YY]MMDDhhmm[.SS]');\n        process.exit(1);\n      } else {\n        const y = +parsedtime[1];\n        const year = parsedtime[2] ? y : y <= 68 ? 2000 + y : 1900 + y;\n        const MM = +parsedtime[4] - 1;\n        const dd = +parsedtime[5];\n        const hh = +parsedtime[6];\n        const mm = +parsedtime[7];\n        const ss = +parsedtime[8];\n        options.time = new Date(Date.UTC(year, MM, dd, hh, mm, ss));\n      }\n\n      continue;\n\n    case 'ref':\n      options.ref = val || args[++i];\n      continue;\n\n    case 'mtime':\n    case 'nocreate':\n    case 'atime':\n    case 'force':\n      options[key] = true;\n      continue;\n\n    default:\n      console.error('touch: illegal option -- ' + arg);\n      usage(1);\n  }\n}\n\nif (!files.length) usage();\nprocess.exitCode = 0;\nPromise.all(files.map(f => touch(f, options))).catch(er => process.exitCode = 1);","map":{"version":3,"sources":["C:/Users/anafe/OneDrive/Documentos/projeto_com_react2/src/backend/node/node_modules/touch/bin/nodetouch.js"],"names":["touch","require","usage","code","console","process","exit","singleFlags","a","m","c","f","singleOpts","r","t","files","args","argv","slice","options","i","length","arg","match","push","charAt","expand","fc","sf","so","soslice","soval","splice","apply","concat","argsplit","split","key","shift","replace","val","join","timestr","parsedtime","error","y","year","MM","dd","hh","mm","ss","time","Date","UTC","ref","exitCode","Promise","all","map","catch","er"],"mappings":"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","sourcesContent":["#!/usr/bin/env node\nconst touch = require(\"../index.js\")\n\nconst usage = code => {\n  console[code ? 'error' : 'log'](\n    'usage:\\n' +\n    'touch [-acfm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...'\n  )\n  process.exit(code)\n}\n\nconst singleFlags = {\n  a: 'atime',\n  m: 'mtime',\n  c: 'nocreate',\n  f: 'force'\n}\n\nconst singleOpts = {\n  r: 'ref',\n  t: 'time'\n}\n\nconst files = []\nconst args = process.argv.slice(2)\nconst options = {}\nfor (let i = 0; i < args.length; i++) {\n  const arg = args[i]\n  if (!arg.match(/^-/)) {\n    files.push(arg)\n    continue\n  }\n\n  // expand shorthands\n  if (arg.charAt(1) !== '-') {\n    const expand = []\n    for (let f = 1; f < arg.length; f++) {\n      const fc = arg.charAt(f)\n      const sf = singleFlags[fc]\n      const so = singleOpts[fc]\n      if (sf)\n        expand.push('--' + sf)\n      else if (so) {\n        const soslice = arg.slice(f + 1)\n        const soval = soslice.charAt(0) === '=' ? soslice : '=' + soslice\n        expand.push('--' + so + soval)\n        f = arg.length\n      } else if (arg !== '-' + fc)\n        expand.push('-' + fc)\n    }\n    if (expand.length) {\n      args.splice.apply(args, [i, 1].concat(expand))\n      i--\n      continue\n    }\n  }\n\n  const argsplit = arg.split('=')\n  const key = argsplit.shift().replace(/^\\-\\-/, '')\n  const val = argsplit.length ? argsplit.join('=') : null\n\n  switch (key) {\n    case 'time':\n      const timestr = val || args[++i]\n      // [-t [[CC]YY]MMDDhhmm[.SS]]\n      const parsedtime = timestr.match(\n        /^(([0-9]{2})?([0-9]{2}))?([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2})(\\.([0-9]{2}))?$/\n      )\n      if (!parsedtime) {\n        console.error('touch: out of range or illegal ' +\n                      'time specification: ' +\n                      '[[CC]YY]MMDDhhmm[.SS]')\n        process.exit(1)\n      } else {\n        const y = +parsedtime[1]\n        const year = parsedtime[2] ? y\n          : y <= 68 ? 2000 + y\n          : 1900 + y\n\n        const MM = +parsedtime[4] - 1\n        const dd = +parsedtime[5]\n        const hh = +parsedtime[6]\n        const mm = +parsedtime[7]\n        const ss = +parsedtime[8]\n\n        options.time = new Date(Date.UTC(year, MM, dd, hh, mm, ss))\n      }\n      continue\n\n    case 'ref':\n      options.ref = val || args[++i]\n      continue\n\n    case 'mtime':\n    case 'nocreate':\n    case 'atime':\n    case 'force':\n      options[key] = true\n      continue\n\n    default:\n      console.error('touch: illegal option -- ' + arg)\n      usage(1)\n  }\n}\n\nif (!files.length)\n  usage()\n\nprocess.exitCode = 0\nPromise.all(files.map(f => touch(f, options)))\n  .catch(er => process.exitCode = 1)\n"]},"metadata":{},"sourceType":"module"}