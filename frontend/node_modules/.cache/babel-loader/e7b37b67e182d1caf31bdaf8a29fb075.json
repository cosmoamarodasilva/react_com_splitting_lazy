{"ast":null,"code":"'use strict';\n\nconst Readable = require('stream').Readable; // copy-paste from https://github.com/mysqljs/mysql/blob/master/lib/protocol/sequences/Query.js\n\n\nmodule.exports = function (command, connectionStream) {\n  command.stream = function (options) {\n    let stream;\n    options = options || {};\n    options.objectMode = true;\n    stream = new Readable(options), stream._read = function () {\n      connectionStream.resume();\n    };\n    this.on('result', (row, i) => {\n      if (!stream.push(row)) {\n        connectionStream.pause();\n      }\n\n      stream.emit('result', row, i); // replicate old emitter\n    });\n    this.on('error', err => {\n      stream.emit('error', err); // Pass on any errors\n    });\n    this.on('end', () => {\n      stream.push(null); // pushing null, indicating EOF\n    });\n    this.on('fields', (fields, i) => {\n      stream.emit('fields', fields, i); // replicate old emitter\n    });\n    return stream;\n  };\n};","map":{"version":3,"sources":["C:/Users/anafe/OneDrive/Documentos/projeto_com_react2/src/backend/node/node_modules/mysql2/lib/results_stream.js"],"names":["Readable","require","module","exports","command","connectionStream","stream","options","objectMode","_read","resume","on","row","i","push","pause","emit","err","fields"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,QAAnC,C,CAEA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAT,EAAkBC,gBAAlB,EAAoC;AACnDD,EAAAA,OAAO,CAACE,MAAR,GAAiB,UAASC,OAAT,EAAkB;AACjC,QAAID,MAAJ;AAEAC,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAA,IAAAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACCF,IAAAA,MAAM,GAAG,IAAIN,QAAJ,CAAaO,OAAb,CAAV,EACCD,MAAM,CAACG,KAAP,GAAe,YAAW;AACzBJ,MAAAA,gBAAgB,CAACK,MAAjB;AACD,KAHD;AAKA,SAAKC,EAAL,CAAQ,QAAR,EAAkB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC5B,UAAI,CAACP,MAAM,CAACQ,IAAP,CAAYF,GAAZ,CAAL,EAAuB;AACrBP,QAAAA,gBAAgB,CAACU,KAAjB;AACD;;AACDT,MAAAA,MAAM,CAACU,IAAP,CAAY,QAAZ,EAAsBJ,GAAtB,EAA2BC,CAA3B,EAJ4B,CAIG;AAChC,KALD;AAOA,SAAKF,EAAL,CAAQ,OAAR,EAAiBM,GAAG,IAAI;AACtBX,MAAAA,MAAM,CAACU,IAAP,CAAY,OAAZ,EAAqBC,GAArB,EADsB,CACK;AAC5B,KAFD;AAIA,SAAKN,EAAL,CAAQ,KAAR,EAAe,MAAM;AACnBL,MAAAA,MAAM,CAACQ,IAAP,CAAY,IAAZ,EADmB,CACA;AACpB,KAFD;AAIA,SAAKH,EAAL,CAAQ,QAAR,EAAkB,CAACO,MAAD,EAASL,CAAT,KAAe;AAC/BP,MAAAA,MAAM,CAACU,IAAP,CAAY,QAAZ,EAAsBE,MAAtB,EAA8BL,CAA9B,EAD+B,CACG;AACnC,KAFD;AAIA,WAAOP,MAAP;AACD,GA9BD;AA+BD,CAhCD","sourcesContent":["'use strict';\n\nconst Readable = require('stream').Readable;\n\n// copy-paste from https://github.com/mysqljs/mysql/blob/master/lib/protocol/sequences/Query.js\nmodule.exports = function(command, connectionStream) {\n  command.stream = function(options) {\n    let stream;\n\n    options = options || {};\n    options.objectMode = true;\n    (stream = new Readable(options)),\n    (stream._read = function() {\n      connectionStream.resume();\n    });\n\n    this.on('result', (row, i) => {\n      if (!stream.push(row)) {\n        connectionStream.pause();\n      }\n      stream.emit('result', row, i); // replicate old emitter\n    });\n\n    this.on('error', err => {\n      stream.emit('error', err); // Pass on any errors\n    });\n\n    this.on('end', () => {\n      stream.push(null); // pushing null, indicating EOF\n    });\n\n    this.on('fields', (fields, i) => {\n      stream.emit('fields', fields, i); // replicate old emitter\n    });\n\n    return stream;\n  };\n};\n"]},"metadata":{},"sourceType":"module"}