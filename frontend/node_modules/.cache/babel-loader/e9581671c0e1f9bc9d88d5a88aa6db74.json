{"ast":null,"code":"var cc = require('./lib/utils');\n\nvar join = require('path').join;\n\nvar deepExtend = require('deep-extend');\n\nvar etc = '/etc';\nvar win = process.platform === \"win32\";\nvar home = win ? process.env.USERPROFILE : process.env.HOME;\n\nmodule.exports = function (name, defaults, argv, parse) {\n  if ('string' !== typeof name) throw new Error('rc(name): name *must* be string');\n  if (!argv) argv = require('minimist')(process.argv.slice(2));\n  defaults = ('string' === typeof defaults ? cc.json(defaults) : defaults) || {};\n  parse = parse || cc.parse;\n  var env = cc.env(name + '_');\n  var configs = [defaults];\n  var configFiles = [];\n\n  function addConfigFile(file) {\n    if (configFiles.indexOf(file) >= 0) return;\n    var fileConfig = cc.file(file);\n\n    if (fileConfig) {\n      configs.push(parse(fileConfig));\n      configFiles.push(file);\n    }\n  } // which files do we look at?\n\n\n  if (!win) [join(etc, name, 'config'), join(etc, name + 'rc')].forEach(addConfigFile);\n  if (home) [join(home, '.config', name, 'config'), join(home, '.config', name), join(home, '.' + name, 'config'), join(home, '.' + name + 'rc')].forEach(addConfigFile);\n  addConfigFile(cc.find('.' + name + 'rc'));\n  if (env.config) addConfigFile(env.config);\n  if (argv.config) addConfigFile(argv.config);\n  return deepExtend.apply(null, configs.concat([env, argv, configFiles.length ? {\n    configs: configFiles,\n    config: configFiles[configFiles.length - 1]\n  } : undefined]));\n};","map":{"version":3,"sources":["C:/Users/anafe/OneDrive/Documentos/projeto_com_react2/src/backend/node/node_modules/rc/index.js"],"names":["cc","require","join","deepExtend","etc","win","process","platform","home","env","USERPROFILE","HOME","module","exports","name","defaults","argv","parse","Error","slice","json","configs","configFiles","addConfigFile","file","indexOf","fileConfig","push","forEach","find","config","apply","concat","length","undefined"],"mappings":"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","sourcesContent":["var cc   = require('./lib/utils')\nvar join = require('path').join\nvar deepExtend = require('deep-extend')\nvar etc = '/etc'\nvar win = process.platform === \"win32\"\nvar home = win\n           ? process.env.USERPROFILE\n           : process.env.HOME\n\nmodule.exports = function (name, defaults, argv, parse) {\n  if('string' !== typeof name)\n    throw new Error('rc(name): name *must* be string')\n  if(!argv)\n    argv = require('minimist')(process.argv.slice(2))\n  defaults = (\n      'string' === typeof defaults\n    ? cc.json(defaults) : defaults\n    ) || {}\n\n  parse = parse || cc.parse\n\n  var env = cc.env(name + '_')\n\n  var configs = [defaults]\n  var configFiles = []\n  function addConfigFile (file) {\n    if (configFiles.indexOf(file) >= 0) return\n    var fileConfig = cc.file(file)\n    if (fileConfig) {\n      configs.push(parse(fileConfig))\n      configFiles.push(file)\n    }\n  }\n\n  // which files do we look at?\n  if (!win)\n   [join(etc, name, 'config'),\n    join(etc, name + 'rc')].forEach(addConfigFile)\n  if (home)\n   [join(home, '.config', name, 'config'),\n    join(home, '.config', name),\n    join(home, '.' + name, 'config'),\n    join(home, '.' + name + 'rc')].forEach(addConfigFile)\n  addConfigFile(cc.find('.'+name+'rc'))\n  if (env.config) addConfigFile(env.config)\n  if (argv.config) addConfigFile(argv.config)\n\n  return deepExtend.apply(null, configs.concat([\n    env,\n    argv,\n    configFiles.length ? {configs: configFiles, config: configFiles[configFiles.length - 1]} : undefined,\n  ]))\n}\n"]},"metadata":{},"sourceType":"module"}