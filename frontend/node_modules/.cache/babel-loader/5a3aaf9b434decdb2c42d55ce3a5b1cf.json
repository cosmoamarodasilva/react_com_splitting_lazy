{"ast":null,"code":"/* eslint-disable unicorn/no-process-exit */\n'use strict';\n\nlet updateNotifier = require('.');\n\nconst options = JSON.parse(process.argv[2]);\nupdateNotifier = new updateNotifier.UpdateNotifier(options);\n(async () => {\n  // Exit process when offline\n  setTimeout(process.exit, 1000 * 30);\n  const update = await updateNotifier.fetchInfo(); // Only update the last update check time on success\n\n  updateNotifier.config.set('lastUpdateCheck', Date.now());\n\n  if (update.type && update.type !== 'latest') {\n    updateNotifier.config.set('update', update);\n  } // Call process exit explicitly to terminate the child process,\n  // otherwise the child process will run forever, according to the Node.js docs\n\n\n  process.exit();\n})().catch(error => {\n  console.error(error);\n  process.exit(1);\n});","map":{"version":3,"sources":["C:/Users/anafe/OneDrive/Documentos/projeto_com_react2/src/backend/node/node_modules/update-notifier/check.js"],"names":["updateNotifier","require","options","JSON","parse","process","argv","UpdateNotifier","setTimeout","exit","update","fetchInfo","config","set","Date","now","type","catch","error","console"],"mappings":"AAAA;AACA;;AACA,IAAIA,cAAc,GAAGC,OAAO,CAAC,GAAD,CAA5B;;AAEA,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,IAAR,CAAa,CAAb,CAAX,CAAhB;AAEAN,cAAc,GAAG,IAAIA,cAAc,CAACO,cAAnB,CAAkCL,OAAlC,CAAjB;AAEA,CAAC,YAAY;AACZ;AACAM,EAAAA,UAAU,CAACH,OAAO,CAACI,IAAT,EAAe,OAAO,EAAtB,CAAV;AAEA,QAAMC,MAAM,GAAG,MAAMV,cAAc,CAACW,SAAf,EAArB,CAJY,CAMZ;;AACAX,EAAAA,cAAc,CAACY,MAAf,CAAsBC,GAAtB,CAA0B,iBAA1B,EAA6CC,IAAI,CAACC,GAAL,EAA7C;;AAEA,MAAIL,MAAM,CAACM,IAAP,IAAeN,MAAM,CAACM,IAAP,KAAgB,QAAnC,EAA6C;AAC5ChB,IAAAA,cAAc,CAACY,MAAf,CAAsBC,GAAtB,CAA0B,QAA1B,EAAoCH,MAApC;AACA,GAXW,CAaZ;AACA;;;AACAL,EAAAA,OAAO,CAACI,IAAR;AACA,CAhBD,IAgBKQ,KAhBL,CAgBWC,KAAK,IAAI;AACnBC,EAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAb,EAAAA,OAAO,CAACI,IAAR,CAAa,CAAb;AACA,CAnBD","sourcesContent":["/* eslint-disable unicorn/no-process-exit */\n'use strict';\nlet updateNotifier = require('.');\n\nconst options = JSON.parse(process.argv[2]);\n\nupdateNotifier = new updateNotifier.UpdateNotifier(options);\n\n(async () => {\n\t// Exit process when offline\n\tsetTimeout(process.exit, 1000 * 30);\n\n\tconst update = await updateNotifier.fetchInfo();\n\n\t// Only update the last update check time on success\n\tupdateNotifier.config.set('lastUpdateCheck', Date.now());\n\n\tif (update.type && update.type !== 'latest') {\n\t\tupdateNotifier.config.set('update', update);\n\t}\n\n\t// Call process exit explicitly to terminate the child process,\n\t// otherwise the child process will run forever, according to the Node.js docs\n\tprocess.exit();\n})().catch(error => {\n\tconsole.error(error);\n\tprocess.exit(1);\n});\n"]},"metadata":{},"sourceType":"module"}