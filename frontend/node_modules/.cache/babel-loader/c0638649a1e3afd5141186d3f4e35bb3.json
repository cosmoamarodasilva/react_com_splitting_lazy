{"ast":null,"code":"/*\n * Jake JavaScript build tool\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\nconst PROJECT_DIR = process.env.PROJECT_DIR;\n\nlet assert = require('assert');\n\nlet exec = require('child_process').execSync;\n\nlet fs = require('fs');\n\nlet {\n  Rule\n} = require(`${PROJECT_DIR}/lib/rule`);\n\nlet {\n  rmRf\n} = require(`${PROJECT_DIR}/lib/jake`);\n\nlet cleanUpAndNext = function (callback) {\n  // Gotta add globbing to file utils rmRf\n  let tmpFiles = ['tmp', 'tmp_ns', 'tmp_cr', 'tmp_p', 'tmp_pf', 'tmpbin', 'tmpsrc', 'tmp_dep1.c', 'tmp_dep1.o', 'tmp_dep1.oo', 'tmp_dep2.c', 'tmp_dep2.o', 'tmp_dep2.oo', 'foo', 'foo.html'];\n  tmpFiles.forEach(function (f) {\n    rmRf(f, {\n      silent: true\n    });\n  });\n  callback && callback();\n};\n\nsuite('rule', function () {\n  this.timeout(7000);\n  setup(function (next) {\n    cleanUpAndNext(next);\n  }); //  - name   foo:bin/main.o\n  //  - pattern    bin/%.o\n  //  - source    src/%.c\n  //\n  // return {\n  //    'dep' : 'foo:src/main.c',\n  //    'file': 'src/main.c'\n  //  };\n\n  test('Rule.getSource', function () {\n    let src = Rule.getSource('foo:bin/main.o', 'bin/%.o', 'src/%.c');\n    assert.equal('foo:src/main.c', src);\n  });\n  test('rule w/o pattern', function () {\n    let out = exec('./node_modules/.bin/jake -q  tmp').toString().trim();\n    let output = [\"tmp_dep2.c task\", \"tmp_dep1.c task\", \"cp tmp_dep1.c tmp_dep1.o task\", \"cp tmp_dep2.c tmp_dep2.o task\", \"tmp task\"];\n    assert.equal(output.join('\\n'), out);\n    let data = fs.readFileSync(process.cwd() + '/tmp');\n    assert.equal('src_1src_2', data.toString());\n    cleanUpAndNext();\n  });\n  test('rule w pattern w/o folder w/o namespace', function () {\n    let out = exec('./node_modules/.bin/jake  -q  tmp_p').toString().trim();\n    let output = [\"tmp_dep2.c task\", \"tmp_dep1.c task\", \"cp tmp_dep1.c tmp_dep1.oo task\", \"cp tmp_dep2.c tmp_dep2.oo task\", \"tmp pattern task\"];\n    let data;\n    assert.equal(output.join('\\n'), out);\n    data = fs.readFileSync(process.cwd() + '/tmp_p');\n    assert.equal('src_1src_2 pattern', data.toString());\n    cleanUpAndNext();\n  });\n  test('rule w pattern w folder w/o namespace', function () {\n    let out = exec('./node_modules/.bin/jake  -q  tmp_pf').toString().trim();\n    let output = [\"tmpsrc/tmp_dep1.c task\", \"cp tmpsrc/tmp_dep1.c tmpbin/tmp_dep1.oo task\", \"tmpsrc/tmp_dep2.c task\", \"cp tmpsrc/tmp_dep2.c tmpbin/tmp_dep2.oo task\", \"tmp pattern folder task\"];\n    let data;\n    assert.equal(output.join('\\n'), out);\n    data = fs.readFileSync(process.cwd() + '/tmp_pf');\n    assert.equal('src/src_1src/src_2 pattern folder', data.toString());\n    cleanUpAndNext();\n  });\n  test.skip('rule w pattern w folder w namespace', function () {\n    let out = exec('./node_modules/.bin/jake -q   tmp_ns').toString().trim();\n    let output = [\"tmpsrc/file2.c init task\" // yes\n    , \"tmpsrc/tmp_dep2.c task\" // no\n    , \"cp tmpsrc/tmp_dep2.c tmpbin/tmp_dep2.oo task\" // no\n    , \"tmpsrc/dep1.c task\" // no\n    , \"cp tmpsrc/dep1.c tmpbin/dep1.oo ns task\" // no\n    , \"cp tmpsrc/file2.c tmpbin/file2.oo ns task\" // yes\n    , \"tmp pattern folder namespace task\"]; // yes\n\n    let data;\n    assert.equal(output.join('\\n'), out);\n    data = fs.readFileSync(process.cwd() + '/tmp_ns');\n    assert.equal('src/src_1src/src_2src/src_3 pattern folder namespace', data.toString());\n    cleanUpAndNext();\n  });\n  test.skip('rule w chain w pattern w folder w namespace', function () {\n    let out = exec('./node_modules/.bin/jake -q tmp_cr').toString().trim();\n    let output = [\"chainrule init task\", \"cp tmpsrc/file1.tex tmpbin/file1.dvi tex->dvi task\", \"cp tmpbin/file1.dvi tmpbin/file1.pdf dvi->pdf task\", \"cp tmpsrc/file2.tex tmpbin/file2.dvi tex->dvi task\", \"cp tmpbin/file2.dvi tmpbin/file2.pdf dvi->pdf task\", \"tmp chainrule namespace task\"];\n    let data;\n    assert.equal(output.join('\\n'), out);\n    data = fs.readFileSync(process.cwd() + '/tmp_cr');\n    assert.equal('tex1 tex2  chainrule namespace', data.toString());\n    cleanUpAndNext();\n  });\n  ['precedence', 'regexPattern', 'sourceFunction'].forEach(function (key) {\n    test('rule with source file not created yet (' + key + ')', function () {\n      let write = process.stderr.write;\n\n      process.stderr.write = () => {};\n\n      rmRf('foo.txt', {\n        silent: true\n      });\n      rmRf('foo.html', {\n        silent: true\n      });\n\n      try {\n        exec('./node_modules/.bin/jake  ' + key + ':test');\n      } catch (err) {\n        // foo.txt prereq doesn't exist yet\n        assert.ok(err.message.indexOf('Unknown task \"foo.html\"') > -1);\n      }\n\n      process.stderr.write = write;\n    });\n    test('rule with source file now created (' + key + ')', function () {\n      fs.writeFileSync('foo.txt', '');\n      let out = exec('./node_modules/.bin/jake -q  ' + key + ':test').toString().trim(); // Should run prereq and test task\n\n      let output = ['created html', 'ran test'];\n      assert.equal(output.join('\\n'), out);\n    });\n    test('rule with source file modified (' + key + ')', function (next) {\n      setTimeout(function () {\n        fs.writeFileSync('foo.txt', '');\n        let out = exec('./node_modules/.bin/jake -q  ' + key + ':test').toString().trim(); // Should again run both prereq and test task\n\n        let output = ['created html', 'ran test'];\n        assert.equal(output.join('\\n'), out); //next();\n\n        cleanUpAndNext(next);\n      }, 1000); // Wait to do the touch to ensure mod-time is different\n    });\n    test('rule with existing objective file and no source ' + ' (should be normal file-task) (' + key + ')', function () {\n      // Remove just the source file\n      fs.writeFileSync('foo.html', '');\n      rmRf('foo.txt', {\n        silent: true\n      });\n      let out = exec('./node_modules/.bin/jake -q  ' + key + ':test').toString().trim(); // Should treat existing objective file as plain file-task,\n      // and just run test-task\n\n      let output = ['ran test'];\n      assert.equal(output.join('\\n'), out);\n      cleanUpAndNext();\n    });\n  });\n});","map":{"version":3,"sources":["C:/Users/anafe/OneDrive/Documentos/projeto_com_react2/src/backend/node/node_modules/jake/test/integration/rule.js"],"names":["PROJECT_DIR","process","env","assert","require","exec","execSync","fs","Rule","rmRf","cleanUpAndNext","callback","tmpFiles","forEach","f","silent","suite","timeout","setup","next","test","src","getSource","equal","out","toString","trim","output","join","data","readFileSync","cwd","skip","key","write","stderr","err","ok","message","indexOf","writeFileSync","setTimeout"],"mappings":"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","sourcesContent":["/*\n * Jake JavaScript build tool\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\n\nconst PROJECT_DIR = process.env.PROJECT_DIR;\n\nlet assert = require('assert');\nlet exec = require('child_process').execSync;\nlet fs = require('fs');\nlet { Rule } = require(`${PROJECT_DIR}/lib/rule`);\nlet { rmRf } = require(`${PROJECT_DIR}/lib/jake`);\n\nlet cleanUpAndNext = function (callback) {\n  // Gotta add globbing to file utils rmRf\n  let tmpFiles = [\n    'tmp'\n    , 'tmp_ns'\n    , 'tmp_cr'\n    , 'tmp_p'\n    , 'tmp_pf'\n    , 'tmpbin'\n    , 'tmpsrc'\n    , 'tmp_dep1.c'\n    , 'tmp_dep1.o'\n    , 'tmp_dep1.oo'\n    , 'tmp_dep2.c'\n    , 'tmp_dep2.o'\n    , 'tmp_dep2.oo'\n    , 'foo'\n    , 'foo.html'\n  ];\n  tmpFiles.forEach(function (f) {\n    rmRf(f, {\n      silent: true\n    });\n  });\n  callback && callback();\n};\n\nsuite('rule', function () {\n\n  this.timeout(7000);\n\n  setup(function (next) {\n    cleanUpAndNext(next);\n  });\n\n\n  //  - name   foo:bin/main.o\n  //  - pattern    bin/%.o\n  //  - source    src/%.c\n  //\n  // return {\n  //    'dep' : 'foo:src/main.c',\n  //    'file': 'src/main.c'\n  //  };\n  test('Rule.getSource', function () {\n    let src = Rule.getSource('foo:bin/main.o', 'bin/%.o', 'src/%.c');\n    assert.equal('foo:src/main.c', src);\n  });\n\n  test('rule w/o pattern', function () {\n    let out = exec( './node_modules/.bin/jake -q  tmp').toString().trim();\n    let output = [\n      \"tmp_dep2.c task\"\n      , \"tmp_dep1.c task\"\n      , \"cp tmp_dep1.c tmp_dep1.o task\"\n      , \"cp tmp_dep2.c tmp_dep2.o task\"\n      , \"tmp task\"];\n    assert.equal( output.join('\\n'), out);\n    let data = fs.readFileSync(process.cwd() + '/tmp');\n    assert.equal('src_1src_2', data.toString());\n    cleanUpAndNext();\n  });\n\n  test('rule w pattern w/o folder w/o namespace', function () {\n    let out = exec( './node_modules/.bin/jake  -q  tmp_p').toString().trim();\n    let output = [\n      \"tmp_dep2.c task\"\n      , \"tmp_dep1.c task\"\n      , \"cp tmp_dep1.c tmp_dep1.oo task\"\n      , \"cp tmp_dep2.c tmp_dep2.oo task\"\n      , \"tmp pattern task\"];\n    let data;\n    assert.equal( output.join('\\n'), out);\n    data = fs.readFileSync(process.cwd() + '/tmp_p');\n    assert.equal('src_1src_2 pattern', data.toString());\n    cleanUpAndNext();\n  });\n\n  test('rule w pattern w folder w/o namespace', function () {\n    let out = exec( './node_modules/.bin/jake  -q  tmp_pf').toString().trim();\n    let output = [\n      \"tmpsrc/tmp_dep1.c task\"\n      , \"cp tmpsrc/tmp_dep1.c tmpbin/tmp_dep1.oo task\"\n      , \"tmpsrc/tmp_dep2.c task\"\n      , \"cp tmpsrc/tmp_dep2.c tmpbin/tmp_dep2.oo task\"\n      , \"tmp pattern folder task\"];\n    let data;\n    assert.equal( output.join('\\n'), out);\n    data = fs.readFileSync(process.cwd() + '/tmp_pf');\n    assert.equal('src/src_1src/src_2 pattern folder', data.toString());\n    cleanUpAndNext();\n  });\n\n  test.skip('rule w pattern w folder w namespace', function () {\n    let out = exec( './node_modules/.bin/jake -q   tmp_ns').toString().trim();\n    let output = [\n      \"tmpsrc/file2.c init task\" // yes\n      , \"tmpsrc/tmp_dep2.c task\" // no\n      , \"cp tmpsrc/tmp_dep2.c tmpbin/tmp_dep2.oo task\" // no\n      , \"tmpsrc/dep1.c task\" // no\n      , \"cp tmpsrc/dep1.c tmpbin/dep1.oo ns task\" // no\n      , \"cp tmpsrc/file2.c tmpbin/file2.oo ns task\" // yes\n      , \"tmp pattern folder namespace task\"]; // yes\n    let data;\n    assert.equal( output.join('\\n'), out);\n    data = fs.readFileSync(process.cwd() + '/tmp_ns');\n    assert.equal('src/src_1src/src_2src/src_3 pattern folder namespace', data.toString());\n    cleanUpAndNext();\n  });\n\n  test.skip('rule w chain w pattern w folder w namespace', function () {\n    let out = exec( './node_modules/.bin/jake -q tmp_cr').toString().trim();\n    let output = [\n      \"chainrule init task\"\n      , \"cp tmpsrc/file1.tex tmpbin/file1.dvi tex->dvi task\"\n      , \"cp tmpbin/file1.dvi tmpbin/file1.pdf dvi->pdf task\"\n      , \"cp tmpsrc/file2.tex tmpbin/file2.dvi tex->dvi task\"\n      , \"cp tmpbin/file2.dvi tmpbin/file2.pdf dvi->pdf task\"\n      , \"tmp chainrule namespace task\"];\n    let data;\n    assert.equal( output.join('\\n'), out);\n    data = fs.readFileSync(process.cwd() + '/tmp_cr');\n    assert.equal('tex1 tex2  chainrule namespace', data.toString());\n    cleanUpAndNext();\n  });\n\n\n  ['precedence', 'regexPattern', 'sourceFunction'].forEach(function (key) {\n\n    test('rule with source file not created yet (' + key  + ')', function () {\n      let write = process.stderr.write;\n      process.stderr.write = () => {};\n      rmRf('foo.txt', {silent: true});\n      rmRf('foo.html', {silent: true});\n      try {\n        exec('./node_modules/.bin/jake  ' + key + ':test');\n      }\n      catch(err) {\n        // foo.txt prereq doesn't exist yet\n        assert.ok(err.message.indexOf('Unknown task \"foo.html\"') > -1);\n      }\n      process.stderr.write = write;\n    });\n\n    test('rule with source file now created (' + key  + ')', function () {\n      fs.writeFileSync('foo.txt', '');\n      let out = exec('./node_modules/.bin/jake -q  ' + key + ':test').toString().trim();\n      // Should run prereq and test task\n      let output = [\n        'created html'\n        , 'ran test'\n      ];\n      assert.equal(output.join('\\n'), out);\n    });\n\n    test('rule with source file modified (' + key  + ')', function (next) {\n      setTimeout(function () {\n        fs.writeFileSync('foo.txt', '');\n        let out = exec('./node_modules/.bin/jake -q  ' + key + ':test').toString().trim();\n        // Should again run both prereq and test task\n        let output = [\n          'created html'\n          , 'ran test'\n        ];\n        assert.equal(output.join('\\n'), out);\n        //next();\n        cleanUpAndNext(next);\n      }, 1000); // Wait to do the touch to ensure mod-time is different\n    });\n\n    test('rule with existing objective file and no source ' +\n        ' (should be normal file-task) (' + key  + ')', function () {\n      // Remove just the source file\n      fs.writeFileSync('foo.html', '');\n      rmRf('foo.txt', {silent: true});\n      let out = exec('./node_modules/.bin/jake -q  ' + key + ':test').toString().trim();\n      // Should treat existing objective file as plain file-task,\n      // and just run test-task\n      let output = [\n        'ran test'\n      ];\n      assert.equal(output.join('\\n'), out);\n      cleanUpAndNext();\n    });\n\n  });\n\n});\n\n\n"]},"metadata":{},"sourceType":"module"}