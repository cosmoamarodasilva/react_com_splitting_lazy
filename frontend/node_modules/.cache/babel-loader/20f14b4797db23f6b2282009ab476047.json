{"ast":null,"code":"var should = require('should');\n\nvar SeqQueue = require('../lib/seq-queue');\n\nvar timeout = 1000;\ndescribe('seq-queue', function () {\n  describe('#createQueue', function () {\n    it('should return a seq-queue instance with init properties', function () {\n      var queue = SeqQueue.createQueue(timeout);\n      should.exist(queue);\n      queue.should.have.property('timeout', timeout);\n      queue.should.have.property('status', SeqQueue.IDLE);\n    });\n  });\n  describe('#push', function () {\n    it('should change the queue status from idle to busy and invoke the task at once when task finish when queue idle', function (done) {\n      var queue = SeqQueue.createQueue(timeout);\n      queue.should.have.property('status', SeqQueue.IDLE);\n      queue.push(function (task) {\n        should.exist(task);\n        task.done();\n        queue.should.have.property('status', SeqQueue.IDLE);\n        done();\n      });\n      queue.should.have.property('status', SeqQueue.BUSY);\n    });\n    it('should keep the status busy and keep the new task wait until the former tasks finish when queue busy', function (done) {\n      var queue = SeqQueue.createQueue(timeout);\n      var formerTaskFinished = false; //add first task\n\n      queue.push(function (task) {\n        formerTaskFinished = true;\n        task.done();\n      });\n      queue.should.have.property('status', SeqQueue.BUSY); //add second task\n\n      queue.push(function (task) {\n        formerTaskFinished.should.be.true;\n        queue.should.have.property('status', SeqQueue.BUSY);\n        task.done();\n        queue.should.have.property('status', SeqQueue.IDLE);\n        done();\n      });\n      queue.should.have.property('status', SeqQueue.BUSY);\n    });\n    it('should ok if the task call done() directly', function (done) {\n      var queue = SeqQueue.createQueue();\n      var taskCount = 0;\n      queue.push(function (task) {\n        taskCount++;\n        task.done();\n      });\n      queue.push(function (task) {\n        taskCount++;\n        task.done();\n      });\n      setTimeout(function () {\n        taskCount.should.equal(2);\n        done();\n      }, 500);\n    });\n  });\n  describe('#close', function () {\n    it('should not accept new request but should execute the rest task in queue when close gracefully', function (done) {\n      var queue = SeqQueue.createQueue(timeout);\n      var closedEventCount = 0;\n      var drainedEventCount = 0;\n      queue.on('closed', function () {\n        closedEventCount++;\n      });\n      queue.on('drained', function () {\n        drainedEventCount++;\n      });\n      var executedTaskCount = 0;\n      queue.push(function (task) {\n        executedTaskCount++;\n        task.done();\n      }).should.be.true;\n      queue.close(false);\n      queue.should.have.property('status', SeqQueue.CLOSED);\n      queue.push(function (task) {\n        // never should be executed\n        executedTaskCount++;\n        task.done();\n      }).should.be.false; // wait all task finished\n\n      setTimeout(function () {\n        executedTaskCount.should.equal(1);\n        closedEventCount.should.equal(1);\n        drainedEventCount.should.equal(1);\n        done();\n      }, 1000);\n    });\n    it('should not execute any task and emit a drained event when close forcefully', function (done) {\n      var queue = SeqQueue.createQueue(timeout);\n      var drainedEventCount = 0;\n      queue.on('drained', function () {\n        drainedEventCount++;\n      });\n      var executedTaskCount = 0;\n      queue.push(function (task) {\n        //never should be executed\n        executedTaskCount++;\n        task.done();\n      }).should.be.true;\n      queue.close(true);\n      queue.should.have.property('status', SeqQueue.DRAINED); // wait all task finished\n\n      setTimeout(function () {\n        executedTaskCount.should.equal(0);\n        drainedEventCount.should.equal(1);\n        done();\n      }, 1000);\n    });\n  });\n  describe('#timeout', function () {\n    it('should emit timeout event and execute the next task when a task timeout by default', function (done) {\n      var queue = SeqQueue.createQueue();\n      var executedTaskCount = 0;\n      var timeoutCount = 0;\n      var onTimeoutCount = 0; //add timeout listener\n\n      queue.on('timeout', function (task) {\n        task.should.be.a('object');\n        task.fn.should.be.a('function');\n        timeoutCount++;\n      });\n      queue.push(function (task) {\n        executedTaskCount++; //no task.done() invoke to cause a timeout\n      }, function () {\n        onTimeoutCount++;\n      }).should.be.true;\n      queue.push(function (task) {\n        executedTaskCount++;\n        task.done();\n      }).should.be.true;\n      setTimeout(function () {\n        //wait all task finish\n        executedTaskCount.should.be.equal(2);\n        timeoutCount.should.be.equal(1);\n        onTimeoutCount.should.be.equal(1);\n        done();\n      }, 4000); //default timeout is 3s\n    });\n    it('should return false when invoke task.done() if task has already timeout', function (done) {\n      var queue = SeqQueue.createQueue();\n      var executedTaskCount = 0;\n      var timeoutCount = 0;\n      var timeout = 1000; //add timeout listener\n\n      queue.on('timeout', function (task) {\n        task.should.be.a('object');\n        task.fn.should.be.a('function');\n        timeoutCount++;\n      });\n      queue.push(function (task) {\n        executedTaskCount++;\n        task.done().should.be.true;\n      }).should.be.true;\n      queue.push(function (task) {\n        //sleep to make a timeout\n        setTimeout(function () {\n          executedTaskCount++;\n          task.done().should.be.false;\n        }, timeout + 1000);\n      }, null, timeout).should.be.true;\n      setTimeout(function () {\n        //wait all task finish\n        executedTaskCount.should.be.equal(2);\n        timeoutCount.should.be.equal(1);\n        done();\n      }, 4000);\n    });\n    it('should never timeout after close forcefully', function (done) {\n      var queue = SeqQueue.createQueue(timeout);\n      var timeoutCount = 0; //add timeout listener\n\n      queue.on('timeout', function (task) {\n        //should never enter here\n        timeoutCount++;\n      });\n      queue.push(function (task) {//no task.done() invoke to cause a timeout\n      }).should.be.true;\n      queue.close(true);\n      setTimeout(function () {\n        //wait all task finish\n        timeoutCount.should.be.equal(0);\n        done();\n      }, timeout * 2);\n    });\n    it('should use the global timeout value by default', function (done) {\n      var globalTimeout = timeout + 100;\n      var queue = SeqQueue.createQueue(globalTimeout); //add timeout listener\n\n      queue.on('timeout', function (task) {\n        (Date.now() - start).should.not.be.below(globalTimeout);\n        done();\n      });\n      queue.push(function (task) {//no task.done() invoke to cause a timeout\n      }).should.be.true;\n      var start = Date.now();\n    });\n    it('should use the timeout value in #push if it was assigned', function (done) {\n      var localTimeout = timeout / 2;\n      var queue = SeqQueue.createQueue(timeout); //add timeout listener\n\n      queue.on('timeout', function (task) {\n        var diff = Date.now() - start;\n        diff.should.not.be.below(localTimeout);\n        diff.should.not.be.above(timeout);\n        done();\n      });\n      queue.push(function (task) {//no task.done() invoke to cause a timeout\n      }, null, localTimeout).should.be.true;\n      var start = Date.now();\n    });\n  });\n  describe('#error', function () {\n    it('should emit an error event and invoke next task when a task throws an event', function (done) {\n      var queue = SeqQueue.createQueue();\n      var errorCount = 0;\n      var taskCount = 0; //add timeout listener\n\n      queue.on('error', function (err, task) {\n        errorCount++;\n        should.exist(err);\n        should.exist(task);\n      });\n      queue.push(function (task) {\n        taskCount++;\n        throw new Error('some error');\n      }).should.be.true;\n      queue.push(function (task) {\n        taskCount++;\n        task.done();\n      });\n      setTimeout(function () {\n        taskCount.should.equal(2);\n        errorCount.should.equal(1);\n        done();\n      }, 500);\n    });\n    it('should be ok when task throw a error after done was invoked', function (done) {\n      var queue = SeqQueue.createQueue();\n      var errorCount = 0;\n      var taskCount = 0; //add timeout listener\n\n      queue.on('error', function (err, task) {\n        errorCount++;\n        should.exist(err);\n        should.exist(task);\n      });\n      queue.push(function (task) {\n        taskCount++;\n        task.done();\n        throw new Error('some error');\n      }).should.be.true;\n      queue.push(function (task) {\n        taskCount++;\n        task.done();\n      });\n      setTimeout(function () {\n        taskCount.should.equal(2);\n        errorCount.should.equal(1);\n        done();\n      }, 500);\n    });\n  });\n});","map":{"version":3,"sources":["C:/Users/anafe/OneDrive/Documentos/projeto_com_react2/src/backend/node/node_modules/seq-queue/test/seq-queue-test.js"],"names":["should","require","SeqQueue","timeout","describe","it","queue","createQueue","exist","have","property","IDLE","done","push","task","BUSY","formerTaskFinished","be","true","taskCount","setTimeout","equal","closedEventCount","drainedEventCount","on","executedTaskCount","close","CLOSED","false","DRAINED","timeoutCount","onTimeoutCount","a","fn","globalTimeout","Date","now","start","not","below","localTimeout","diff","above","errorCount","err","Error"],"mappings":"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","sourcesContent":["var should = require('should');\nvar SeqQueue = require('../lib/seq-queue');\n\nvar timeout = 1000;\n\ndescribe('seq-queue', function() {\n\t\n\tdescribe('#createQueue', function() {\n\t\tit('should return a seq-queue instance with init properties', function() {\n\t\t\tvar queue = SeqQueue.createQueue(timeout);\n\t\t\tshould.exist(queue);\n\t\t\tqueue.should.have.property('timeout', timeout);\n\t\t\tqueue.should.have.property('status', SeqQueue.IDLE);\n\t\t});\n\t});\n\t\n\tdescribe('#push' , function() {\n\t\tit('should change the queue status from idle to busy and invoke the task at once when task finish when queue idle', function(done) {\n\t\t\tvar queue = SeqQueue.createQueue(timeout);\n\t\t\tqueue.should.have.property('status', SeqQueue.IDLE);\n\t\t\tqueue.push(function(task) {\n\t\t\t\tshould.exist(task);\n\t\t\t\ttask.done();\n\t\t\t\tqueue.should.have.property('status', SeqQueue.IDLE);\n\t\t\t\tdone();\n\t\t\t});\n\t\t\tqueue.should.have.property('status', SeqQueue.BUSY);\n\t\t});\n\t\t\n\t\tit('should keep the status busy and keep the new task wait until the former tasks finish when queue busy', function(done) {\n\t\t\tvar queue = SeqQueue.createQueue(timeout);\n\t\t\tvar formerTaskFinished = false;\n\t\t\t//add first task\n\t\t\tqueue.push(function(task) {\n\t\t\t\tformerTaskFinished = true;\n\t\t\t\ttask.done();\n\t\t\t});\n\t\t\tqueue.should.have.property('status', SeqQueue.BUSY);\n\t\t\t//add second task\n\t\t\tqueue.push(function(task) {\n\t\t\t\tformerTaskFinished.should.be.true;\n\t\t\t\tqueue.should.have.property('status', SeqQueue.BUSY);\n\t\t\t\ttask.done();\n\t\t\t\tqueue.should.have.property('status', SeqQueue.IDLE);\n\t\t\t\tdone();\n\t\t\t});\n\t\t\tqueue.should.have.property('status', SeqQueue.BUSY);\n\t\t});\n\t\t\n\t\tit('should ok if the task call done() directly', function(done) {\n\t\t\tvar queue = SeqQueue.createQueue();\n\t\t\tvar taskCount = 0;\n\t\t\tqueue.push(function(task) {\n\t\t\t\ttaskCount++;\n\t\t\t\ttask.done();\n\t\t\t});\n\t\t\tqueue.push(function(task) {\n\t\t\t\ttaskCount++;\n\t\t\t\ttask.done();\n\t\t\t});\n\t\t\tsetTimeout(function() {\n\t\t\t\ttaskCount.should.equal(2);\n\t\t\t\tdone();\n\t\t\t}, 500);\n\t\t});\n\t});\n\t\n\tdescribe('#close', function() {\n\t\tit('should not accept new request but should execute the rest task in queue when close gracefully', function(done) {\n\t\t\tvar queue = SeqQueue.createQueue(timeout);\n\t\t\tvar closedEventCount = 0;\n\t\t\tvar drainedEventCount = 0;\n\t\t\tqueue.on('closed', function() {\n\t\t\t\tclosedEventCount++;\n\t\t\t});\n\t\t\tqueue.on('drained', function() {\n\t\t\t\tdrainedEventCount++;\n\t\t\t});\n\t\t\tvar executedTaskCount = 0;\n\t\t\tqueue.push(function(task) {\n\t\t\t\texecutedTaskCount++;\n\t\t\t\ttask.done();\n\t\t\t}).should.be.true;\n\t\t\tqueue.close(false);\n\t\t\tqueue.should.have.property('status', SeqQueue.CLOSED);\n\t\t\t\n\t\t\tqueue.push(function(task) {\n\t\t\t\t// never should be executed\n\t\t\t\texecutedTaskCount++;\n\t\t\t\ttask.done();\n\t\t\t}).should.be.false;\n\t\t\t\n\t\t\t// wait all task finished\n\t\t\tsetTimeout(function() {\n\t\t\t\texecutedTaskCount.should.equal(1);\n\t\t\t\tclosedEventCount.should.equal(1);\n\t\t\t\tdrainedEventCount.should.equal(1);\n\t\t\t\tdone();\n\t\t\t}, 1000);\n\t\t});\n\t\t\n\t\tit('should not execute any task and emit a drained event when close forcefully', function(done) {\n\t\t\tvar queue = SeqQueue.createQueue(timeout);\n\t\t\tvar drainedEventCount = 0;\n\t\t\tqueue.on('drained', function() {\n\t\t\t\tdrainedEventCount++;\n\t\t\t});\n\t\t\tvar executedTaskCount = 0;\n\t\t\tqueue.push(function(task) {\n\t\t\t\t//never should be executed\n\t\t\t\texecutedTaskCount++;\n\t\t\t\ttask.done();\n\t\t\t}).should.be.true;\n\t\t\tqueue.close(true);\n\t\t\tqueue.should.have.property('status', SeqQueue.DRAINED);\n\t\t\t\n\t\t\t// wait all task finished\n\t\t\tsetTimeout(function() {\n\t\t\t\texecutedTaskCount.should.equal(0);\n\t\t\t\tdrainedEventCount.should.equal(1);\n\t\t\t\tdone();\n\t\t\t}, 1000);\n\t\t});\n\t});\n\t\n\tdescribe('#timeout', function() {\n\t\tit('should emit timeout event and execute the next task when a task timeout by default', function(done) {\n\t\t\tvar queue = SeqQueue.createQueue();\n\t\t\tvar executedTaskCount = 0;\n\t\t\tvar timeoutCount = 0;\n\t\t\tvar onTimeoutCount = 0;\n\t\t\t//add timeout listener\n\t\t\tqueue.on('timeout', function(task) {\n\t\t\t\ttask.should.be.a('object');\n\t\t\t\ttask.fn.should.be.a('function');\n\t\t\t\ttimeoutCount++;\n\t\t\t});\n\t\t\t\n\t\t\tqueue.push(function(task) {\n\t\t\t\texecutedTaskCount++;\n\t\t\t\t//no task.done() invoke to cause a timeout\n\t\t\t}, function() {\n\t\t\t\tonTimeoutCount++;\n\t\t\t}).should.be.true;\n\t\t\t\n\t\t\tqueue.push(function(task) {\n\t\t\t\texecutedTaskCount++;\n\t\t\t\ttask.done();\n\t\t\t}).should.be.true;\n\t\t\t\n\t\t\tsetTimeout(function() {\n\t\t\t\t//wait all task finish\n\t\t\t\texecutedTaskCount.should.be.equal(2);\n\t\t\t\ttimeoutCount.should.be.equal(1);\n\t\t\t\tonTimeoutCount.should.be.equal(1);\n\t\t\t\tdone();\n\t\t\t}, 4000);\t//default timeout is 3s\n\t\t});\n\t\t\n\t\tit('should return false when invoke task.done() if task has already timeout', function(done) {\n\t\t\tvar queue = SeqQueue.createQueue();\n\t\t\tvar executedTaskCount = 0;\n\t\t\tvar timeoutCount = 0;\n\t\t\tvar timeout = 1000;\n\t\t\t\n\t\t\t//add timeout listener\n\t\t\tqueue.on('timeout', function(task) {\n\t\t\t\ttask.should.be.a('object');\n\t\t\t\ttask.fn.should.be.a('function');\n\t\t\t\ttimeoutCount++;\n\t\t\t});\n\t\t\t\n\t\t\tqueue.push(function(task) {\n\t\t\t\texecutedTaskCount++;\n\t\t\t\ttask.done().should.be.true;\n\t\t\t}).should.be.true;\n\t\t\t\n\t\t\tqueue.push(function(task) {\n\t\t\t\t//sleep to make a timeout\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\texecutedTaskCount++;\n\t\t\t\t\ttask.done().should.be.false;\n\t\t\t\t}, timeout + 1000);\n\t\t\t}, null, timeout).should.be.true;\n\t\t\t\n\t\t\tsetTimeout(function() {\n\t\t\t\t//wait all task finish\n\t\t\t\texecutedTaskCount.should.be.equal(2);\n\t\t\t\ttimeoutCount.should.be.equal(1);\n\t\t\t\tdone();\n\t\t\t}, 4000);\n\t\t});\n\t\t\n\t\tit('should never timeout after close forcefully', function(done) {\n\t\t\tvar queue = SeqQueue.createQueue(timeout);\n\t\t\tvar timeoutCount = 0;\n\t\t\t//add timeout listener\n\t\t\tqueue.on('timeout', function(task) {\n\t\t\t\t//should never enter here\n\t\t\t\ttimeoutCount++;\n\t\t\t});\n\t\t\t\n\t\t\tqueue.push(function(task) {\n\t\t\t\t//no task.done() invoke to cause a timeout\n\t\t\t}).should.be.true;\n\t\t\t\n\t\t\tqueue.close(true);\n\t\t\t\n\t\t\tsetTimeout(function() {\n\t\t\t\t//wait all task finish\n\t\t\t\ttimeoutCount.should.be.equal(0);\n\t\t\t\tdone();\n\t\t\t}, timeout * 2);\n\t\t});\n\t\t\n\t\tit('should use the global timeout value by default', function(done) {\n\t\t\tvar globalTimeout = timeout + 100;\n\t\t\tvar queue = SeqQueue.createQueue(globalTimeout);\n\t\t\t//add timeout listener\n\t\t\tqueue.on('timeout', function(task) {\n\t\t\t\t(Date.now() - start).should.not.be.below(globalTimeout);\n\t\t\t\tdone();\n\t\t\t});\n\t\t\t\n\t\t\tqueue.push(function(task) {\n\t\t\t\t//no task.done() invoke to cause a timeout\n\t\t\t}).should.be.true;\n\t\t\tvar start = Date.now();\n\t\t});\n\t\t\n\t\tit('should use the timeout value in #push if it was assigned', function(done) {\n\t\t\tvar localTimeout = timeout / 2;\n\t\t\tvar queue = SeqQueue.createQueue(timeout);\n\t\t\t//add timeout listener\n\t\t\tqueue.on('timeout', function(task) {\n\t\t\t\tvar diff = Date.now() - start;\n\t\t\t\tdiff.should.not.be.below(localTimeout);\n\t\t\t\tdiff.should.not.be.above(timeout);\n\t\t\t\tdone();\n\t\t\t});\n\t\t\t\n\t\t\tqueue.push(function(task) {\n\t\t\t\t//no task.done() invoke to cause a timeout\n\t\t\t}, null, localTimeout).should.be.true;\n\t\t\tvar start = Date.now();\n\t\t});\n\t});\n\t\n\tdescribe('#error', function() {\n\t\tit('should emit an error event and invoke next task when a task throws an event', function(done) {\n\t\t\tvar queue = SeqQueue.createQueue();\n\t\t\tvar errorCount = 0;\n\t\t\tvar taskCount = 0;\n\t\t\t//add timeout listener\n\t\t\tqueue.on('error', function(err, task) {\n\t\t\t\terrorCount++;\n\t\t\t\tshould.exist(err);\n\t\t\t\tshould.exist(task);\n\t\t\t});\n\t\t\t\n\t\t\tqueue.push(function(task) {\n\t\t\t\ttaskCount++;\n\t\t\t\tthrow new Error('some error');\n\t\t\t}).should.be.true;\n\t\t\t\n\t\t\tqueue.push(function(task) {\n\t\t\t\ttaskCount++;\n\t\t\t\ttask.done();\n\t\t\t});\n\t\t\t\n\t\t\tsetTimeout(function() {\n\t\t\t\ttaskCount.should.equal(2);\n\t\t\t\terrorCount.should.equal(1);\n\t\t\t\tdone();\n\t\t\t}, 500);\n\t\t});\n\n\t\tit('should be ok when task throw a error after done was invoked', function(done) {\n\t\t\tvar queue = SeqQueue.createQueue();\n\t\t\tvar errorCount = 0;\n\t\t\tvar taskCount = 0;\n\t\t\t//add timeout listener\n\t\t\tqueue.on('error', function(err, task) {\n\t\t\t\terrorCount++;\n\t\t\t\tshould.exist(err);\n\t\t\t\tshould.exist(task);\n\t\t\t});\n\t\t\t\n\t\t\tqueue.push(function(task) {\n\t\t\t\ttaskCount++;\n\t\t\t\ttask.done();\n\t\t\t\tthrow new Error('some error');\n\t\t\t}).should.be.true;\n\t\t\t\n\t\t\tqueue.push(function(task) {\n\t\t\t\ttaskCount++;\n\t\t\t\ttask.done();\n\t\t\t});\n\t\t\t\n\t\t\tsetTimeout(function() {\n\t\t\t\ttaskCount.should.equal(2);\n\t\t\t\terrorCount.should.equal(1);\n\t\t\t\tdone();\n\t\t\t}, 500);\n\t\t});\n\t});\n});"]},"metadata":{},"sourceType":"module"}