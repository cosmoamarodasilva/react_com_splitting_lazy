{"ast":null,"code":"var n = 'rc' + Math.random();\n\nvar assert = require('assert');\n\nprocess.env[n + '_envOption'] = 42;\n\nvar config = require('../')(n, {\n  option: true\n});\n\nconsole.log(config);\nassert.equal(config.option, true);\nassert.equal(config.envOption, 42);\n\nvar customArgv = require('../')(n, {\n  option: true\n}, {\n  // nopt-like argv\n  option: false,\n  envOption: 24,\n  argv: {\n    remain: [],\n    cooked: ['--no-option', '--envOption', '24'],\n    original: ['--no-option', '--envOption=24']\n  }\n});\n\nconsole.log(customArgv);\nassert.equal(customArgv.option, false);\nassert.equal(customArgv.envOption, 24);\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar jsonrc = path.resolve('.' + n + 'rc');\nfs.writeFileSync(jsonrc, ['{', '// json overrides default', '\"option\": false,', '/* env overrides json */', '\"envOption\": 24', '}'].join('\\n'));\n\nvar commentedJSON = require('../')(n, {\n  option: true\n});\n\nfs.unlinkSync(jsonrc);\nconsole.log(commentedJSON);\nassert.equal(commentedJSON.option, false);\nassert.equal(commentedJSON.envOption, 42);\nassert.equal(commentedJSON.config, jsonrc);\nassert.equal(commentedJSON.configs.length, 1);\nassert.equal(commentedJSON.configs[0], jsonrc);","map":{"version":3,"sources":["C:/Users/anafe/OneDrive/Documentos/projeto_com_react2/src/backend/node/node_modules/rc/test/test.js"],"names":["n","Math","random","assert","require","process","env","config","option","console","log","equal","envOption","customArgv","argv","remain","cooked","original","fs","path","jsonrc","resolve","writeFileSync","join","commentedJSON","unlinkSync","configs","length"],"mappings":"AACA,IAAIA,CAAC,GAAG,OAAKC,IAAI,CAACC,MAAL,EAAb;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEAC,OAAO,CAACC,GAAR,CAAYN,CAAC,GAAC,YAAd,IAA8B,EAA9B;;AAEA,IAAIO,MAAM,GAAGH,OAAO,CAAC,KAAD,CAAP,CAAeJ,CAAf,EAAkB;AAC7BQ,EAAAA,MAAM,EAAE;AADqB,CAAlB,CAAb;;AAIAC,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEAJ,MAAM,CAACQ,KAAP,CAAaJ,MAAM,CAACC,MAApB,EAA4B,IAA5B;AACAL,MAAM,CAACQ,KAAP,CAAaJ,MAAM,CAACK,SAApB,EAA+B,EAA/B;;AAEA,IAAIC,UAAU,GAAGT,OAAO,CAAC,KAAD,CAAP,CAAeJ,CAAf,EAAkB;AACjCQ,EAAAA,MAAM,EAAE;AADyB,CAAlB,EAEd;AAAE;AACHA,EAAAA,MAAM,EAAE,KADP;AAEDI,EAAAA,SAAS,EAAE,EAFV;AAGDE,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,EADJ;AAEJC,IAAAA,MAAM,EAAE,CAAC,aAAD,EAAgB,aAAhB,EAA+B,IAA/B,CAFJ;AAGJC,IAAAA,QAAQ,EAAE,CAAC,aAAD,EAAgB,gBAAhB;AAHN;AAHL,CAFc,CAAjB;;AAYAR,OAAO,CAACC,GAAR,CAAYG,UAAZ;AAEAV,MAAM,CAACQ,KAAP,CAAaE,UAAU,CAACL,MAAxB,EAAgC,KAAhC;AACAL,MAAM,CAACQ,KAAP,CAAaE,UAAU,CAACD,SAAxB,EAAmC,EAAnC;;AAEA,IAAIM,EAAE,GAAGd,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIe,IAAI,GAAGf,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIgB,MAAM,GAAGD,IAAI,CAACE,OAAL,CAAa,MAAMrB,CAAN,GAAU,IAAvB,CAAb;AAEAkB,EAAE,CAACI,aAAH,CAAiBF,MAAjB,EAAyB,CACvB,GADuB,EAErB,2BAFqB,EAGrB,kBAHqB,EAIrB,0BAJqB,EAKrB,iBALqB,EAMvB,GANuB,EAOvBG,IAPuB,CAOlB,IAPkB,CAAzB;;AASA,IAAIC,aAAa,GAAGpB,OAAO,CAAC,KAAD,CAAP,CAAeJ,CAAf,EAAkB;AACpCQ,EAAAA,MAAM,EAAE;AAD4B,CAAlB,CAApB;;AAIAU,EAAE,CAACO,UAAH,CAAcL,MAAd;AAEAX,OAAO,CAACC,GAAR,CAAYc,aAAZ;AAEArB,MAAM,CAACQ,KAAP,CAAaa,aAAa,CAAChB,MAA3B,EAAmC,KAAnC;AACAL,MAAM,CAACQ,KAAP,CAAaa,aAAa,CAACZ,SAA3B,EAAsC,EAAtC;AAEAT,MAAM,CAACQ,KAAP,CAAaa,aAAa,CAACjB,MAA3B,EAAmCa,MAAnC;AACAjB,MAAM,CAACQ,KAAP,CAAaa,aAAa,CAACE,OAAd,CAAsBC,MAAnC,EAA2C,CAA3C;AACAxB,MAAM,CAACQ,KAAP,CAAaa,aAAa,CAACE,OAAd,CAAsB,CAAtB,CAAb,EAAuCN,MAAvC","sourcesContent":["\nvar n = 'rc'+Math.random()\nvar assert = require('assert')\n\nprocess.env[n+'_envOption'] = 42\n\nvar config = require('../')(n, {\n  option: true\n})\n\nconsole.log(config)\n\nassert.equal(config.option, true)\nassert.equal(config.envOption, 42)\n\nvar customArgv = require('../')(n, {\n  option: true\n}, { // nopt-like argv\n  option: false,\n  envOption: 24,\n  argv: {\n    remain: [],\n    cooked: ['--no-option', '--envOption', '24'],\n    original: ['--no-option', '--envOption=24']\n  }\n})\n\nconsole.log(customArgv)\n\nassert.equal(customArgv.option, false)\nassert.equal(customArgv.envOption, 24)\n\nvar fs = require('fs')\nvar path = require('path')\nvar jsonrc = path.resolve('.' + n + 'rc');\n\nfs.writeFileSync(jsonrc, [\n  '{',\n    '// json overrides default',\n    '\"option\": false,',\n    '/* env overrides json */',\n    '\"envOption\": 24',\n  '}'\n].join('\\n'));\n\nvar commentedJSON = require('../')(n, {\n  option: true\n})\n\nfs.unlinkSync(jsonrc);\n\nconsole.log(commentedJSON)\n\nassert.equal(commentedJSON.option, false)\nassert.equal(commentedJSON.envOption, 42)\n\nassert.equal(commentedJSON.config, jsonrc)\nassert.equal(commentedJSON.configs.length, 1)\nassert.equal(commentedJSON.configs[0], jsonrc)\n"]},"metadata":{},"sourceType":"module"}